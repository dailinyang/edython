/**
 * ezPython
 *
 * Copyright 2017 Jérôme LAURENS.
 *
 * License CeCILL-B
 */
/**
 * @fileoverview Constants for ezPython.
 * @author jerome.laurens@u-bourgogne.fr (Jérôme LAURENS)
 */
'use strict'

/**
 * @name ezP.Const
 * @namespace
 **/
goog.provide('ezP.Type')

goog.require('ezP')

// Connection types
ezP.Type = ezP.Type || {}

ezP.Type.Xpr = {
  any_all: '0',
  primary: '0.2',
  expression: '0',
  identifier: '0.1',
  forif: '1',
  star_or_xpr: '2', // “*” or_expr
  comprehension: '3',
  comp_for: '4',
  comp_if: '5',
  or_test: '6',
  lambda_expr_nocond: '7',
  parameter_positional: '8.1',
  parameter_1_star: '8.2',
  parameter_keyed: '8.3',
  parameter_2_stars: '8.4',
  TUPLE: '9',
}

ezP.Type.Xpr.Provide = {
  any: [ezP.Type.Xpr.any_all],
  primary: [ezP.Type.Xpr.primary],
  star_or_expr: [ezP.Type.Xpr.star_or_xpr],
  comprehension: [ezP.Type.Xpr.comprehension],
  comp_for: [ezP.Type.Xpr.comp_for],
  comp_if: [ezP.Type.Xpr.comp_if],
  get: [ezP.Type.Xpr.identifier,
    ezP.Type.Xpr.parameter_positional,
    ezP.Type.Xpr.parameter_1_star,
    ezP.Type.Xpr.parameter_keyed,
    ezP.Type.Xpr.parameter_2_stars],
}

ezP.Type.Xpr.Require = {
  any: [ezP.Type.Xpr.any_all],
  expression: [ezP.Type.Xpr.any_all],
  forif: [ezP.Type.Xpr.expression, ezP.Type.Xpr.forif],
  starred_item: [ezP.Type.Xpr.expression, ezP.Type.Xpr.star_or_xpr],
  or_expr: [ezP.Type.Xpr.any_all],
  target_list: [ezP.Type.Xpr.any_all],
  or_test: [ezP.Type.Xpr.any_all],
  comp_iter: [ezP.Type.Xpr.any_all, ezP.Type.Xpr.comp_for, ezP.Type.Xpr.comp_if],
  expression_nocond: [ezP.Type.Xpr.any_all, ezP.Type.Xpr.or_test, ezP.Type.Xpr.lambda_expr_nocond]
}

/*
In the first column the statement before.
X means that the statement is forbidden
for example, there must not be 2 consecutive else clauses.
        any   if    elif  else  loop
any     O     O     X     X     O
if      O     O     O     O     O
elif    O     O     O     O     O
else    O     O     X     X     O
loop    O     O     X     O     O
*/
/* any means everything else,
 * loop means for or while
 * all means everything.
 * See the rendered connection subclass
 **/
ezP.Type.Stt = {
  any_all: 0,
  if_elif: 1,
  if_elif_bounded: 2,
  if_else: 3,
  loop_else: 4
}
ezP.Type.Stt.Check = {
  none: [-1],
  after_any: [ezP.Type.Stt.any_all],
  before_any: [ezP.Type.Stt.any_all],
  after_if: [ezP.Type.Stt.any_all,
    ezP.Type.Stt.if_elif,
    ezP.Type.Stt.if_else],
  before_if: [ezP.Type.Stt.any_all],
  after_elif: [ezP.Type.Stt.any_all,
    ezP.Type.Stt.if_elif,
    ezP.Type.Stt.if_else],
  before_elif: [ezP.Type.Stt.if_elif],
  after_else: [ezP.Type.Stt.any_all],
  before_else: [ezP.Type.Stt.if_else,
    ezP.Type.Stt.loop_else],
  before_if_else: [ezP.Type.Stt.if_else],
  before_loop_else: [ezP.Type.Stt.loop_else],
  after_loop: [ezP.Type.Stt.any_all,
    ezP.Type.Stt.loop_else],
  before_loop: [ezP.Type.Stt.any_all]
}
/*

*/

ezP.T3 = {
  imagnumber: "0",
  floatnumber: "1",
  integer: "2",
  bytesliteral: "3",
  stringliteral: "4",
  identifier: "5",
  atom: "6",
  target: "7",
  target_list: "8",
  bracket_target_list: "9",
  enclosure: "10",
  augtarget: "11",
  literal: "12",
  parenth_target_list: "13",
  augop: "14",
  parenth_form: "15",
  starred_target: "16",
  comprehension: "17",
  module: "18",
  starred_item: "19",
  comp_for: "20",
  relative_module: "21",
  starred_expression: "22",
  comp_iter: "23",
  feature: "24",
  starred: "25",
  comp_if: "26",
  list_display: "27",
  set_display: "28",
  dict_display: "29",
  key_datum_list: "30",
  key_datum: "31",
  dict_comprehension: "32",
  generator_expression: "33",
  yield_atom: "34",
  yield_expression: "35",
  primary: "36",
  attributeref: "37",
  subscription: "38",
  slicing: "39",
  slice_list: "40",
  slice_item: "41",
  proper_slice: "42",
  lower_bound: "43",
  upper_bound: "44",
  stride: "45",
  call: "46",
  argument_list: "47",
  positional_arguments: "48",
  starred_and_keywords: "49",
  keywords_arguments: "50",
  keyword_item: "51",
  await_expr: "52",
  power: "53",
  u_expr: "54",
  m_expr: "55",
  a_expr: "56",
  shift_expr: "57",
  and_expr: "58",
  xor_expr: "59",
  or_expr: "60",
  comparison: "61",
  comp_operator: "62",
  or_test: "63",
  and_test: "64",
  not_test: "65",
  conditional_expression: "66",
  expression: "67",
  expression_nocond: "68",
  lambda_expr: "69",
  lambda_expr_nocond: "70",
  expression_list: "71",
  starred_list: "72",
 }
 
 ezP.T3.Require = {
  atom: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
  ],
  target: [
     ezP.T3.identifier,
     ezP.T3.bracket_target_list,
     ezP.T3.parenth_target_list,
     ezP.T3.starred_target,
     ezP.T3.starred,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
  ],
  target_list: [
     ezP.T3.identifier,
     ezP.T3.target,
     ezP.T3.bracket_target_list,
     ezP.T3.parenth_target_list,
     ezP.T3.starred_target,
     ezP.T3.starred,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
  ],
  enclosure: [
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
  ],
  augtarget: [
     ezP.T3.identifier,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
  ],
  literal: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
  ],
  starred_target: [
     ezP.T3.starred,
  ],
  module: [
     ezP.T3.identifier,
  ],
  starred_item: [
     ezP.T3.starred,
  ],
  starred_expression: [
     ezP.T3.starred,
  ],
  comp_iter: [
     ezP.T3.comp_for,
     ezP.T3.comp_if,
  ],
  feature: [
     ezP.T3.identifier,
  ],
  key_datum_list: [
     ezP.T3.key_datum,
  ],
  primary: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
     ezP.T3.call,
  ],
  slice_list: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
     ezP.T3.primary,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
     ezP.T3.slice_item,
     ezP.T3.proper_slice,
     ezP.T3.call,
     ezP.T3.await_expr,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.lambda_expr,
  ],
  slice_item: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
     ezP.T3.primary,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
     ezP.T3.proper_slice,
     ezP.T3.call,
     ezP.T3.await_expr,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.lambda_expr,
  ],
  lower_bound: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
     ezP.T3.primary,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
     ezP.T3.call,
     ezP.T3.await_expr,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.lambda_expr,
  ],
  upper_bound: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
     ezP.T3.primary,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
     ezP.T3.call,
     ezP.T3.await_expr,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.lambda_expr,
  ],
  stride: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
     ezP.T3.primary,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
     ezP.T3.call,
     ezP.T3.await_expr,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.lambda_expr,
  ],
  argument_list: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
     ezP.T3.primary,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
     ezP.T3.call,
     ezP.T3.positional_arguments,
     ezP.T3.starred_and_keywords,
     ezP.T3.keywords_arguments,
     ezP.T3.keyword_item,
     ezP.T3.await_expr,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.lambda_expr,
  ],
  positional_arguments: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
     ezP.T3.primary,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
     ezP.T3.call,
     ezP.T3.await_expr,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.lambda_expr,
  ],
  starred_and_keywords: [
     ezP.T3.keyword_item,
  ],
  keywords_arguments: [
     ezP.T3.keyword_item,
  ],
  power: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
     ezP.T3.primary,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
     ezP.T3.call,
     ezP.T3.await_expr,
  ],
  u_expr: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
     ezP.T3.primary,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
     ezP.T3.call,
     ezP.T3.await_expr,
     ezP.T3.power,
  ],
  m_expr: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
     ezP.T3.primary,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
     ezP.T3.call,
     ezP.T3.await_expr,
     ezP.T3.power,
     ezP.T3.u_expr,
  ],
  a_expr: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
     ezP.T3.primary,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
     ezP.T3.call,
     ezP.T3.await_expr,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
  ],
  shift_expr: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
     ezP.T3.primary,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
     ezP.T3.call,
     ezP.T3.await_expr,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
  ],
  and_expr: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
     ezP.T3.primary,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
     ezP.T3.call,
     ezP.T3.await_expr,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
  ],
  xor_expr: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
     ezP.T3.primary,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
     ezP.T3.call,
     ezP.T3.await_expr,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
  ],
  or_expr: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
     ezP.T3.primary,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
     ezP.T3.call,
     ezP.T3.await_expr,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
  ],
  comparison: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
     ezP.T3.primary,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
     ezP.T3.call,
     ezP.T3.await_expr,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
  ],
  or_test: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
     ezP.T3.primary,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
     ezP.T3.call,
     ezP.T3.await_expr,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.and_test,
     ezP.T3.not_test,
  ],
  and_test: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
     ezP.T3.primary,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
     ezP.T3.call,
     ezP.T3.await_expr,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.not_test,
  ],
  not_test: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
     ezP.T3.primary,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
     ezP.T3.call,
     ezP.T3.await_expr,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
  ],
  conditional_expression: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
     ezP.T3.primary,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
     ezP.T3.call,
     ezP.T3.await_expr,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
  ],
  expression: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
     ezP.T3.primary,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
     ezP.T3.call,
     ezP.T3.await_expr,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.lambda_expr,
  ],
  expression_nocond: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
     ezP.T3.primary,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
     ezP.T3.call,
     ezP.T3.await_expr,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.lambda_expr_nocond,
  ],
  expression_list: [
     ezP.T3.imagnumber,
     ezP.T3.floatnumber,
     ezP.T3.integer,
     ezP.T3.bytesliteral,
     ezP.T3.stringliteral,
     ezP.T3.identifier,
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.literal,
     ezP.T3.parenth_form,
     ezP.T3.list_display,
     ezP.T3.set_display,
     ezP.T3.dict_display,
     ezP.T3.generator_expression,
     ezP.T3.yield_atom,
     ezP.T3.primary,
     ezP.T3.attributeref,
     ezP.T3.subscription,
     ezP.T3.slicing,
     ezP.T3.call,
     ezP.T3.await_expr,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.lambda_expr,
  ],
  starred_list: [
     ezP.T3.starred_item,
     ezP.T3.starred,
  ],
 }
 
 ezP.T3.Provide = {
  imagnumber: [
     ezP.T3.atom,
     ezP.T3.literal,
     ezP.T3.primary,
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  floatnumber: [
     ezP.T3.atom,
     ezP.T3.literal,
     ezP.T3.primary,
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  integer: [
     ezP.T3.atom,
     ezP.T3.literal,
     ezP.T3.primary,
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  bytesliteral: [
     ezP.T3.atom,
     ezP.T3.literal,
     ezP.T3.primary,
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  stringliteral: [
     ezP.T3.atom,
     ezP.T3.literal,
     ezP.T3.primary,
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  identifier: [
     ezP.T3.atom,
     ezP.T3.target,
     ezP.T3.target_list,
     ezP.T3.augtarget,
     ezP.T3.module,
     ezP.T3.feature,
     ezP.T3.primary,
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  atom: [
     ezP.T3.primary,
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  target: [
     ezP.T3.target_list,
  ],
  bracket_target_list: [
     ezP.T3.target,
     ezP.T3.target_list,
  ],
  enclosure: [
     ezP.T3.atom,
     ezP.T3.primary,
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  literal: [
     ezP.T3.atom,
     ezP.T3.primary,
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  parenth_target_list: [
     ezP.T3.target,
     ezP.T3.target_list,
  ],
  parenth_form: [
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.primary,
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  starred_target: [
     ezP.T3.target,
     ezP.T3.target_list,
  ],
  starred_item: [
     ezP.T3.starred_list,
  ],
  comp_for: [
     ezP.T3.comp_iter,
  ],
  starred: [
     ezP.T3.target,
     ezP.T3.target_list,
     ezP.T3.starred_target,
     ezP.T3.starred_item,
     ezP.T3.starred_expression,
     ezP.T3.starred_list,
  ],
  comp_if: [
     ezP.T3.comp_iter,
  ],
  list_display: [
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.primary,
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  set_display: [
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.primary,
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  dict_display: [
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.primary,
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  key_datum: [
     ezP.T3.key_datum_list,
  ],
  generator_expression: [
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.primary,
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  yield_atom: [
     ezP.T3.atom,
     ezP.T3.enclosure,
     ezP.T3.primary,
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  primary: [
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  attributeref: [
     ezP.T3.target,
     ezP.T3.target_list,
     ezP.T3.augtarget,
     ezP.T3.primary,
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  subscription: [
     ezP.T3.target,
     ezP.T3.target_list,
     ezP.T3.augtarget,
     ezP.T3.primary,
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  slicing: [
     ezP.T3.target,
     ezP.T3.target_list,
     ezP.T3.augtarget,
     ezP.T3.primary,
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  slice_item: [
     ezP.T3.slice_list,
  ],
  proper_slice: [
     ezP.T3.slice_list,
     ezP.T3.slice_item,
  ],
  call: [
     ezP.T3.primary,
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  positional_arguments: [
     ezP.T3.argument_list,
  ],
  starred_and_keywords: [
     ezP.T3.argument_list,
  ],
  keywords_arguments: [
     ezP.T3.argument_list,
  ],
  keyword_item: [
     ezP.T3.argument_list,
     ezP.T3.starred_and_keywords,
     ezP.T3.keywords_arguments,
  ],
  await_expr: [
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.power,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  power: [
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.u_expr,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  u_expr: [
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.m_expr,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  m_expr: [
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.a_expr,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  a_expr: [
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.shift_expr,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  shift_expr: [
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.and_expr,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  and_expr: [
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.xor_expr,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  xor_expr: [
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.or_expr,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  or_expr: [
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.comparison,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  comparison: [
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.not_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  or_test: [
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  and_test: [
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.or_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  not_test: [
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.or_test,
     ezP.T3.and_test,
     ezP.T3.conditional_expression,
     ezP.T3.expression,
     ezP.T3.expression_nocond,
     ezP.T3.expression_list,
  ],
  conditional_expression: [
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.expression,
     ezP.T3.expression_list,
  ],
  expression: [
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.expression_list,
  ],
  lambda_expr: [
     ezP.T3.slice_list,
     ezP.T3.slice_item,
     ezP.T3.lower_bound,
     ezP.T3.upper_bound,
     ezP.T3.stride,
     ezP.T3.argument_list,
     ezP.T3.positional_arguments,
     ezP.T3.expression,
     ezP.T3.expression_list,
  ],
  lambda_expr_nocond: [
     ezP.T3.expression_nocond,
  ],
 }
 
 ezP.T3.Require.comprehensive_starred_list = ezP.T3.Require.starred_list.slice()
ezP.T3.Require.comprehensive_starred_list.push(ezP.T3.comprehension)

ezP.T3.Require.comprehensive_key_datum_list = ezP.T3.Require.key_datum_list.slice()
ezP.T3.Require.comprehensive_key_datum_list.push(ezP.T3.dict_comprehension)
