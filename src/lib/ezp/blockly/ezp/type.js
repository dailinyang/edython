/**
 * ezPython
 *
 * Copyright 2017 Jérôme LAURENS.
 *
 * License CeCILL-B
 */
/**
 * @fileoverview Constants for ezPython.
 * @author jerome.laurens@u-bourgogne.fr (Jérôme LAURENS)
 */
'use strict'

/**
 * @name ezP.Const
 * @namespace
 **/
goog.provide('ezP.Type')

goog.require('ezP')

// Connection types
ezP.Type = ezP.Type || {}

ezP.Type.Xpr = {
  any_all: '0',
  primary: '0.2',
  expression: '0',
  identifier: '0.1',
  forif: '1',
  star_or_xpr: '2', // “*” or_expr
  comprehension: '3',
  comp_for: '4',
  comp_if: '5',
  or_test: '6',
  lambda_expr_nocond: '7',
  parameter_positional: '8.1',
  parameter_1_star: '8.2',
  parameter_keyed: '8.3',
  parameter_2_stars: '8.4',
  TUPLE: '9',
}

ezP.Type.Xpr.Provide = {
  any: [ezP.Type.Xpr.any_all],
  primary: [ezP.Type.Xpr.primary],
  star_or_expr: [ezP.Type.Xpr.star_or_xpr],
  comprehension: [ezP.Type.Xpr.comprehension],
  comp_for: [ezP.Type.Xpr.comp_for],
  comp_if: [ezP.Type.Xpr.comp_if],
  get: [ezP.Type.Xpr.identifier,
    ezP.Type.Xpr.parameter_positional,
    ezP.Type.Xpr.parameter_1_star,
    ezP.Type.Xpr.parameter_keyed,
    ezP.Type.Xpr.parameter_2_stars],
}

ezP.Type.Xpr.Require = {
  any: [ezP.Type.Xpr.any_all],
  expression: [ezP.Type.Xpr.any_all],
  forif: [ezP.Type.Xpr.expression, ezP.Type.Xpr.forif],
  starred_item: [ezP.Type.Xpr.expression, ezP.Type.Xpr.star_or_xpr],
  or_expr: [ezP.Type.Xpr.any_all],
  target_list: [ezP.Type.Xpr.any_all],
  or_test: [ezP.Type.Xpr.any_all],
  comp_iter: [ezP.Type.Xpr.any_all, ezP.Type.Xpr.comp_for, ezP.Type.Xpr.comp_if],
  expression_nocond: [ezP.Type.Xpr.any_all, ezP.Type.Xpr.or_test, ezP.Type.Xpr.lambda_expr_nocond]
}

/*
In the first column the statement before.
X means that the statement is forbidden
for example, there must not be 2 consecutive else clauses.
        any   if    elif  else  loop
any     O     O     X     X     O
if      O     O     O     O     O
elif    O     O     O     O     O
else    O     O     X     X     O
loop    O     O     X     O     O
*/
/* any means everything else,
 * loop means for or while
 * all means everything.
 * See the rendered connection subclass
 **/
ezP.Type.Stt = {
  any_all: 0,
  if_elif: 1,
  if_elif_bounded: 2,
  if_else: 3,
  loop_else: 4
}
ezP.Type.Stt.Check = {
  none: [-1],
  after_any: [ezP.Type.Stt.any_all],
  before_any: [ezP.Type.Stt.any_all],
  after_if: [ezP.Type.Stt.any_all,
    ezP.Type.Stt.if_elif,
    ezP.Type.Stt.if_else],
  before_if: [ezP.Type.Stt.any_all],
  after_elif: [ezP.Type.Stt.any_all,
    ezP.Type.Stt.if_elif,
    ezP.Type.Stt.if_else],
  before_elif: [ezP.Type.Stt.if_elif],
  after_else: [ezP.Type.Stt.any_all],
  before_else: [ezP.Type.Stt.if_else,
    ezP.Type.Stt.loop_else],
  before_if_else: [ezP.Type.Stt.if_else],
  before_loop_else: [ezP.Type.Stt.loop_else],
  after_loop: [ezP.Type.Stt.any_all,
    ezP.Type.Stt.loop_else],
  before_loop: [ezP.Type.Stt.any_all]
}
/*

*/

ezP.T3 = {
  identifier: "0",
  imagnumber: "1",
  floatnumber: "2",
  integer: "3",
  bytesliteral: "4",
  stringliteral: "5",
  atom: "6",
  enclosure: "7",
  literal: "8",
  parenth_form: "9",
  comprehension: "10",
  comp_for: "11",
  comp_iter: "12",
  comp_if: "13",
  list_display: "14",
  set_display: "15",
  dict_display: "16",
  key_datum_list: "17",
  key_datum: "18",
  dict_comprehension: "19",
  generator_expression: "20",
  yield_atom: "21",
  yield_expression: "22",
  primary: "23",
  attributeref: "24",
  subscription: "25",
  slicing: "26",
  slice_list: "27",
  slice_item: "28",
  proper_slice: "29",
  lower_bound: "30",
  upper_bound: "31",
  stride: "32",
  call: "33",
  argument_list: "34",
  positional_arguments: "35",
  starred_and_keywords: "36",
  keywords_arguments: "37",
  keyword_item: "38",
  await_expr: "39",
  power: "40",
  u_expr: "41",
  m_expr: "42",
  a_expr: "43",
  shift_expr: "44",
  and_expr: "45",
  xor_expr: "46",
  or_expr: "47",
  comparison: "48",
  comp_operator: "49",
  or_test: "50",
  and_test: "51",
  not_test: "52",
  conditional_expression: "53",
  expression: "54",
  expression_nocond: "55",
  lambda_expr: "56",
  lambda_expr_nocond: "57",
  expression_list: "58",
  starred_list: "59",
  starred_expression: "60",
  starred_item: "61",
}
 
ezP.T3.Require = {
  atom: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
  ],
  enclosure: [
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
  ],
  literal: [
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
  ],
  comp_iter: [
     ezP.T3.comp_for, 
     ezP.T3.comp_if, 
  ],
  key_datum_list: [
     ezP.T3.key_datum, 
  ],
  primary: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
  ],
  slice_list: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.slice_item, 
     ezP.T3.proper_slice, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
     ezP.T3.u_expr, 
     ezP.T3.m_expr, 
     ezP.T3.a_expr, 
     ezP.T3.shift_expr, 
     ezP.T3.and_expr, 
     ezP.T3.xor_expr, 
     ezP.T3.or_expr, 
     ezP.T3.comparison, 
     ezP.T3.or_test, 
     ezP.T3.and_test, 
     ezP.T3.not_test, 
     ezP.T3.conditional_expression, 
     ezP.T3.expression, 
     ezP.T3.lambda_expr, 
  ],
  slice_item: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.proper_slice, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
     ezP.T3.u_expr, 
     ezP.T3.m_expr, 
     ezP.T3.a_expr, 
     ezP.T3.shift_expr, 
     ezP.T3.and_expr, 
     ezP.T3.xor_expr, 
     ezP.T3.or_expr, 
     ezP.T3.comparison, 
     ezP.T3.or_test, 
     ezP.T3.and_test, 
     ezP.T3.not_test, 
     ezP.T3.conditional_expression, 
     ezP.T3.expression, 
     ezP.T3.lambda_expr, 
  ],
  lower_bound: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
     ezP.T3.u_expr, 
     ezP.T3.m_expr, 
     ezP.T3.a_expr, 
     ezP.T3.shift_expr, 
     ezP.T3.and_expr, 
     ezP.T3.xor_expr, 
     ezP.T3.or_expr, 
     ezP.T3.comparison, 
     ezP.T3.or_test, 
     ezP.T3.and_test, 
     ezP.T3.not_test, 
     ezP.T3.conditional_expression, 
     ezP.T3.expression, 
     ezP.T3.lambda_expr, 
  ],
  upper_bound: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
     ezP.T3.u_expr, 
     ezP.T3.m_expr, 
     ezP.T3.a_expr, 
     ezP.T3.shift_expr, 
     ezP.T3.and_expr, 
     ezP.T3.xor_expr, 
     ezP.T3.or_expr, 
     ezP.T3.comparison, 
     ezP.T3.or_test, 
     ezP.T3.and_test, 
     ezP.T3.not_test, 
     ezP.T3.conditional_expression, 
     ezP.T3.expression, 
     ezP.T3.lambda_expr, 
  ],
  stride: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
     ezP.T3.u_expr, 
     ezP.T3.m_expr, 
     ezP.T3.a_expr, 
     ezP.T3.shift_expr, 
     ezP.T3.and_expr, 
     ezP.T3.xor_expr, 
     ezP.T3.or_expr, 
     ezP.T3.comparison, 
     ezP.T3.or_test, 
     ezP.T3.and_test, 
     ezP.T3.not_test, 
     ezP.T3.conditional_expression, 
     ezP.T3.expression, 
     ezP.T3.lambda_expr, 
  ],
  argument_list: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
     ezP.T3.positional_arguments, 
     ezP.T3.starred_and_keywords, 
     ezP.T3.keywords_arguments, 
     ezP.T3.keyword_item, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
     ezP.T3.u_expr, 
     ezP.T3.m_expr, 
     ezP.T3.a_expr, 
     ezP.T3.shift_expr, 
     ezP.T3.and_expr, 
     ezP.T3.xor_expr, 
     ezP.T3.or_expr, 
     ezP.T3.comparison, 
     ezP.T3.or_test, 
     ezP.T3.and_test, 
     ezP.T3.not_test, 
     ezP.T3.conditional_expression, 
     ezP.T3.expression, 
     ezP.T3.lambda_expr, 
  ],
  positional_arguments: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
     ezP.T3.u_expr, 
     ezP.T3.m_expr, 
     ezP.T3.a_expr, 
     ezP.T3.shift_expr, 
     ezP.T3.and_expr, 
     ezP.T3.xor_expr, 
     ezP.T3.or_expr, 
     ezP.T3.comparison, 
     ezP.T3.or_test, 
     ezP.T3.and_test, 
     ezP.T3.not_test, 
     ezP.T3.conditional_expression, 
     ezP.T3.expression, 
     ezP.T3.lambda_expr, 
  ],
  starred_and_keywords: [
     ezP.T3.keyword_item, 
  ],
  keywords_arguments: [
     ezP.T3.keyword_item, 
  ],
  power: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
  ],
  u_expr: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
  ],
  m_expr: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
     ezP.T3.u_expr, 
  ],
  a_expr: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
     ezP.T3.u_expr, 
     ezP.T3.m_expr, 
  ],
  shift_expr: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
     ezP.T3.u_expr, 
     ezP.T3.m_expr, 
     ezP.T3.a_expr, 
  ],
  and_expr: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
     ezP.T3.u_expr, 
     ezP.T3.m_expr, 
     ezP.T3.a_expr, 
     ezP.T3.shift_expr, 
  ],
  xor_expr: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
     ezP.T3.u_expr, 
     ezP.T3.m_expr, 
     ezP.T3.a_expr, 
     ezP.T3.shift_expr, 
     ezP.T3.and_expr, 
  ],
  or_expr: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
     ezP.T3.u_expr, 
     ezP.T3.m_expr, 
     ezP.T3.a_expr, 
     ezP.T3.shift_expr, 
     ezP.T3.and_expr, 
     ezP.T3.xor_expr, 
  ],
  comparison: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
     ezP.T3.u_expr, 
     ezP.T3.m_expr, 
     ezP.T3.a_expr, 
     ezP.T3.shift_expr, 
     ezP.T3.and_expr, 
     ezP.T3.xor_expr, 
     ezP.T3.or_expr, 
  ],
  or_test: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
     ezP.T3.u_expr, 
     ezP.T3.m_expr, 
     ezP.T3.a_expr, 
     ezP.T3.shift_expr, 
     ezP.T3.and_expr, 
     ezP.T3.xor_expr, 
     ezP.T3.or_expr, 
     ezP.T3.comparison, 
     ezP.T3.and_test, 
     ezP.T3.not_test, 
  ],
  and_test: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
     ezP.T3.u_expr, 
     ezP.T3.m_expr, 
     ezP.T3.a_expr, 
     ezP.T3.shift_expr, 
     ezP.T3.and_expr, 
     ezP.T3.xor_expr, 
     ezP.T3.or_expr, 
     ezP.T3.comparison, 
     ezP.T3.not_test, 
  ],
  not_test: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
     ezP.T3.u_expr, 
     ezP.T3.m_expr, 
     ezP.T3.a_expr, 
     ezP.T3.shift_expr, 
     ezP.T3.and_expr, 
     ezP.T3.xor_expr, 
     ezP.T3.or_expr, 
     ezP.T3.comparison, 
  ],
  conditional_expression: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
     ezP.T3.u_expr, 
     ezP.T3.m_expr, 
     ezP.T3.a_expr, 
     ezP.T3.shift_expr, 
     ezP.T3.and_expr, 
     ezP.T3.xor_expr, 
     ezP.T3.or_expr, 
     ezP.T3.comparison, 
     ezP.T3.or_test, 
     ezP.T3.and_test, 
     ezP.T3.not_test, 
  ],
  expression: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
     ezP.T3.u_expr, 
     ezP.T3.m_expr, 
     ezP.T3.a_expr, 
     ezP.T3.shift_expr, 
     ezP.T3.and_expr, 
     ezP.T3.xor_expr, 
     ezP.T3.or_expr, 
     ezP.T3.comparison, 
     ezP.T3.or_test, 
     ezP.T3.and_test, 
     ezP.T3.not_test, 
     ezP.T3.conditional_expression, 
     ezP.T3.lambda_expr, 
  ],
  expression_nocond: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
     ezP.T3.u_expr, 
     ezP.T3.m_expr, 
     ezP.T3.a_expr, 
     ezP.T3.shift_expr, 
     ezP.T3.and_expr, 
     ezP.T3.xor_expr, 
     ezP.T3.or_expr, 
     ezP.T3.comparison, 
     ezP.T3.or_test, 
     ezP.T3.and_test, 
     ezP.T3.not_test, 
     ezP.T3.lambda_expr_nocond, 
  ],
  expression_list: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
     ezP.T3.u_expr, 
     ezP.T3.m_expr, 
     ezP.T3.a_expr, 
     ezP.T3.shift_expr, 
     ezP.T3.and_expr, 
     ezP.T3.xor_expr, 
     ezP.T3.or_expr, 
     ezP.T3.comparison, 
     ezP.T3.or_test, 
     ezP.T3.and_test, 
     ezP.T3.not_test, 
     ezP.T3.conditional_expression, 
     ezP.T3.expression, 
     ezP.T3.lambda_expr, 
  ],
  starred_list: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
     ezP.T3.u_expr, 
     ezP.T3.m_expr, 
     ezP.T3.a_expr, 
     ezP.T3.shift_expr, 
     ezP.T3.and_expr, 
     ezP.T3.xor_expr, 
     ezP.T3.or_expr, 
     ezP.T3.comparison, 
     ezP.T3.or_test, 
     ezP.T3.and_test, 
     ezP.T3.not_test, 
     ezP.T3.conditional_expression, 
     ezP.T3.expression, 
     ezP.T3.lambda_expr, 
     ezP.T3.starred_item, 
  ],
  starred_expression: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
     ezP.T3.u_expr, 
     ezP.T3.m_expr, 
     ezP.T3.a_expr, 
     ezP.T3.shift_expr, 
     ezP.T3.and_expr, 
     ezP.T3.xor_expr, 
     ezP.T3.or_expr, 
     ezP.T3.comparison, 
     ezP.T3.or_test, 
     ezP.T3.and_test, 
     ezP.T3.not_test, 
     ezP.T3.conditional_expression, 
     ezP.T3.expression, 
     ezP.T3.lambda_expr, 
  ],
  starred_item: [
     ezP.T3.identifier, 
     ezP.T3.imagnumber, 
     ezP.T3.floatnumber, 
     ezP.T3.integer, 
     ezP.T3.bytesliteral, 
     ezP.T3.stringliteral, 
     ezP.T3.atom, 
     ezP.T3.enclosure, 
     ezP.T3.literal, 
     ezP.T3.parenth_form, 
     ezP.T3.list_display, 
     ezP.T3.set_display, 
     ezP.T3.dict_display, 
     ezP.T3.generator_expression, 
     ezP.T3.yield_atom, 
     ezP.T3.primary, 
     ezP.T3.attributeref, 
     ezP.T3.subscription, 
     ezP.T3.slicing, 
     ezP.T3.call, 
     ezP.T3.await_expr, 
     ezP.T3.power, 
     ezP.T3.u_expr, 
     ezP.T3.m_expr, 
     ezP.T3.a_expr, 
     ezP.T3.shift_expr, 
     ezP.T3.and_expr, 
     ezP.T3.xor_expr, 
     ezP.T3.or_expr, 
     ezP.T3.comparison, 
     ezP.T3.or_test, 
     ezP.T3.and_test, 
     ezP.T3.not_test, 
     ezP.T3.conditional_expression, 
     ezP.T3.expression, 
     ezP.T3.lambda_expr, 
  ],
}

ezP.T3.Require.comprehensive_starred_list = ezP.T3.Require.starred_list.slice()
ezP.T3.Require.comprehensive_starred_list.push(ezP.T3.comprehension)

ezP.T3.Require.comprehensive_key_datum_list = ezP.T3.Require.key_datum_list.slice()
ezP.T3.Require.comprehensive_key_datum_list.push(ezP.T3.dict_comprehension)
