// This file was generated by "python types.py" on 2018-01-18 20:46:21.267748

/**
 * ezPython
 *
 * Copyright 2017 Jérôme LAURENS.
 *
 * License CeCILL-B
 */
/**
 * @fileoverview Constants for ezPython.
 * @author jerome.laurens@u-bourgogne.fr (Jérôme LAURENS)
 */
'use strict'

/**
 * @name ezP.T3
 * @namespace
 **/

goog.provide('ezP.T3')

goog.require('ezP')

ezP.T3 = {
  imagnumber                /*   ::=                                                    */ : "0",
  floatnumber               /*   ::=                                                    */ : "1",
  integer                   /*   ::=                                                    */ : "2",
  bytesliteral              /*   ::=                                                    */ : "3",
  stringliteral             /*   ::=                                                    */ : "4",
  identifier                /*   ::=                                                    */ : "5",
  atom                      /*   ::= identifier | literal | enclosure                   */ : "6",
  enclosure                 /*   ::= parenth_form | list_display | dict_display | set_display | generator_expression | yield_atom */ : "7",
  literal                   /*   ::= stringliteral | bytesliteral | integer | floatnumber | imagnumber */ : "8",
  parenth_form              /*   ::= "(" [starred_expression] ")"                       */ : "9",
  comprehension             /*   ::= expression comp_for                                */ : "10",
  comp_for                  /*   ::= [ASYNC] "for" target_list "in" or_test [comp_iter] */ : "11",
  comp_iter                 /*   ::= comp_for | comp_if                                 */ : "12",
  comp_if                   /*   ::= "if" expression_nocond [comp_iter]                 */ : "13",
  list_display              /*   ::= "[" [starred_list | comprehension] "]"             */ : "14",
  set_display               /*   ::= "{" (starred_list | comprehension) "}"             */ : "15",
  dict_display              /*   ::= "{" [key_datum_list | dict_comprehension] "}"      */ : "16",
  key_datum_list            /*   ::= key_datum ("," key_datum)* [","]                   */ : "17",
  key_datum                 /*   ::= expression ":" expression | "**" or_expr           */ : "18",
  dict_comprehension        /*   ::= expression ":" expression comp_for                 */ : "19",
  generator_expression      /*   ::= "(" expression comp_for ")"                        */ : "20",
  yield_atom                /*   ::= "(" yield_expression ")"                           */ : "21",
  yield_expression          /*   ::= yield_expression_list | yield_expression_from      */ : "22",
  primary                   /*   ::= atom | attributeref | subscription | slicing | call */ : "23",
  attributeref              /*   ::= primary "." identifier                             */ : "24",
  subscription              /*   ::= primary "[" expression_list "]"                    */ : "25",
  slicing                   /*   ::= primary "[" slice_list "]"                         */ : "26",
  slice_list                /*   ::= slice_item ("," slice_item)* [","]                 */ : "27",
  slice_item                /*   ::= expression | proper_slice                          */ : "28",
  proper_slice              /*   ::= [lower_bound] ":" [upper_bound] [ ":" [stride] ]   */ : "29",
  lower_bound               /*   ::= expression                                         */ : "30",
  upper_bound               /*   ::= expression                                         */ : "31",
  stride                    /*   ::= expression                                         */ : "32",
  call                      /*   ::= primary "(" [argument_list [","] | comprehension] ")" */ : "33",
  argument_list             /*   ::= positional_arguments ["," starred_and_keywords] ["," keywords_arguments] | starred_and_keywords ["," keywords_arguments] | keywords_arguments */ : "34",
  positional_arguments      /*   ::= positional_argument ("," positional_argument)*     */ : "35",
  starred_and_keywords      /*   ::= starred_and_keyword ("," starred_and_keyword)*     */ : "36",
  keywords_arguments        /*   ::= keywords_argument ("," keywords_argument)*         */ : "37",
  keyword_item              /*   ::= identifier "=" expression                          */ : "38",
  await_expr                /*   ::= "await" primary                                    */ : "39",
  power                     /*   ::= ( await_expr | primary ) ["**" u_expr]             */ : "40",
  u_expr                    /*   ::= power | u_expr_concrete                            */ : "41",
  m_expr                    /*   ::= u_expr | m_expr_concrete                           */ : "42",
  a_expr                    /*   ::= m_expr | a_expr_concrete                           */ : "43",
  shift_expr                /*   ::= a_expr | shift_expr_concrete                       */ : "44",
  and_expr                  /*   ::= shift_expr | and_expr_concrete                     */ : "45",
  xor_expr                  /*   ::= and_expr | xor_expr_concrete                       */ : "46",
  or_expr                   /*   ::= xor_expr | or_expr_concrete                        */ : "47",
  comparison                /*   ::= or_expr | comparison_list                          */ : "48",
  comp_operator             /*   ::= "<" | ">" | "==" | ">=" | "<=" | "!=" | "is" ["not"] | ["not"] "in" */ : "49",
  or_test                   /*   ::= and_test | or_test_concrete                        */ : "50",
  and_test                  /*   ::= not_test | and_test_concrete                       */ : "51",
  not_test                  /*   ::= comparison | not_test_concrete                     */ : "52",
  conditional_expression    /*   ::= or_test | conditional_expression_concrete          */ : "53",
  expression                /*   ::= conditional_expression | lambda_expr               */ : "54",
  expression_nocond         /*   ::= or_test | lambda_expr_nocond                       */ : "55",
  lambda_expr               /*   ::= "lambda" [parameter_list]: expression              */ : "56",
  lambda_expr_nocond        /*   ::= "lambda" [parameter_list]: expression_nocond       */ : "57",
  expression_list           /*   ::= expression ( "," expression )* [","]               */ : "58",
  starred_list              /*   ::= starred_item ( "," starred_item )* [","]           */ : "59",
  starred_expression        /*   ::= "*" expression                                     */ : "60",
  starred_item              /*   ::= expression | starred_or_expr                       */ : "61",
  yield_expression_list     /*   ::= "yield" expression_list_or_void                    */ : "62",
  yield_expression_from     /*   ::= "yield from" expression                            */ : "63",
  positional_argument       /*   ::= expression | starred_expression                    */ : "64",
  starred_and_keyword       /*   ::= starred_expression | keyword_item                  */ : "65",
  keywords_argument         /*   ::= keyword_item | double_starred_expression           */ : "66",
  double_starred_expression /*   ::= "**" expression                                    */ : "67",
  u_expr_concrete           /*   ::= "-" u_expr | "+" u_expr | "~" u_expr               */ : "68",
  m_expr_concrete           /*   ::= m_expr "*" u_expr | m_expr "@" m_expr | m_expr "//" u_expr| m_expr "/" u_expr | m_expr "%" u_expr */ : "69",
  a_expr_concrete           /*   ::= a_expr "+" m_expr | a_expr "-" m_expr              */ : "70",
  shift_expr_concrete       /*   ::= shift_expr ( "<<" | ">>" ) a_expr                  */ : "71",
  and_expr_concrete         /*   ::= and_expr "&" shift_expr                            */ : "72",
  xor_expr_concrete         /*   ::= xor_expr "^" and_expr                              */ : "73",
  or_expr_concrete          /*   ::= or_expr "|" xor_expr                               */ : "74",
  comparison_list           /*   ::= or_expr comp_operator or_expr ( comp_operator or_expr )* */ : "75",
  or_test_concrete          /*   ::= or_test "or" and_test                              */ : "76",
  and_test_concrete         /*   ::= and_test "and" not_test                            */ : "77",
  not_test_concrete         /*   ::= "not" not_test                                     */ : "78",
  conditional_expression_concrete /*   ::= or_test "if" or_test "else" expression             */ : "79",
  starred_expression_concrete /*   ::= ( starred_item "," )* [starred_item]               */ : "80",
  starred_or_expr           /*   ::= "*" or_expr                                        */ : "81",
  target_list               /*   ::= target ("," target)* [","]                         */ : "82",
  target                    /*   ::= identifier | parenth_target_list | bracket_target_list | attributeref | subscription | slicing | starred_target */ : "83",
  augtarget                 /*   ::= identifier | attributeref | subscription | slicing */ : "84",
  augop                     /*   ::= "+=" | "-=" | "*=" | "@=" | "/=" | "//=" | "%=" | "**=" | ">>=" | "<<=" | "&=" | "^=" | "|=" */ : "85",
  module                    /*   ::= (identifier ".")* identifier                       */ : "86",
  relative_module           /*   ::= "."* module | "."+                                 */ : "87",
  feature                   /*   ::= identifier                                         */ : "88",
  bracket_target_list       /*   ::= "[" void_target_list "]"                           */ : "89",
  parenth_target_list       /*   ::= "(" void_target_list ")"                           */ : "90",
  starred_target            /*   ::= "*" target                                         */ : "91",
  starred_concrete          /*   ::= "*" something                                      */ : "92",
}

ezP.T3.Require = {
 atom: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
 ],
 enclosure: [
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
 ],
 literal: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
 ],
 comp_iter: [
    ezP.T3.comp_for,
    ezP.T3.comp_if,
 ],
 key_datum_list: [
    ezP.T3.key_datum,
 ],
 yield_expression: [
    ezP.T3.yield_expression_list,
    ezP.T3.yield_expression_from,
 ],
 primary: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
 ],
 slice_list: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.slice_item,
    ezP.T3.proper_slice,
    ezP.T3.call,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.lambda_expr,
    ezP.T3.u_expr_concrete,
    ezP.T3.m_expr_concrete,
    ezP.T3.a_expr_concrete,
    ezP.T3.shift_expr_concrete,
    ezP.T3.and_expr_concrete,
    ezP.T3.xor_expr_concrete,
    ezP.T3.or_expr_concrete,
    ezP.T3.comparison_list,
    ezP.T3.or_test_concrete,
    ezP.T3.and_test_concrete,
    ezP.T3.not_test_concrete,
    ezP.T3.conditional_expression_concrete,
 ],
 slice_item: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.proper_slice,
    ezP.T3.call,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.lambda_expr,
    ezP.T3.u_expr_concrete,
    ezP.T3.m_expr_concrete,
    ezP.T3.a_expr_concrete,
    ezP.T3.shift_expr_concrete,
    ezP.T3.and_expr_concrete,
    ezP.T3.xor_expr_concrete,
    ezP.T3.or_expr_concrete,
    ezP.T3.comparison_list,
    ezP.T3.or_test_concrete,
    ezP.T3.and_test_concrete,
    ezP.T3.not_test_concrete,
    ezP.T3.conditional_expression_concrete,
 ],
 lower_bound: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.lambda_expr,
    ezP.T3.u_expr_concrete,
    ezP.T3.m_expr_concrete,
    ezP.T3.a_expr_concrete,
    ezP.T3.shift_expr_concrete,
    ezP.T3.and_expr_concrete,
    ezP.T3.xor_expr_concrete,
    ezP.T3.or_expr_concrete,
    ezP.T3.comparison_list,
    ezP.T3.or_test_concrete,
    ezP.T3.and_test_concrete,
    ezP.T3.not_test_concrete,
    ezP.T3.conditional_expression_concrete,
 ],
 upper_bound: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.lambda_expr,
    ezP.T3.u_expr_concrete,
    ezP.T3.m_expr_concrete,
    ezP.T3.a_expr_concrete,
    ezP.T3.shift_expr_concrete,
    ezP.T3.and_expr_concrete,
    ezP.T3.xor_expr_concrete,
    ezP.T3.or_expr_concrete,
    ezP.T3.comparison_list,
    ezP.T3.or_test_concrete,
    ezP.T3.and_test_concrete,
    ezP.T3.not_test_concrete,
    ezP.T3.conditional_expression_concrete,
 ],
 stride: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.lambda_expr,
    ezP.T3.u_expr_concrete,
    ezP.T3.m_expr_concrete,
    ezP.T3.a_expr_concrete,
    ezP.T3.shift_expr_concrete,
    ezP.T3.and_expr_concrete,
    ezP.T3.xor_expr_concrete,
    ezP.T3.or_expr_concrete,
    ezP.T3.comparison_list,
    ezP.T3.or_test_concrete,
    ezP.T3.and_test_concrete,
    ezP.T3.not_test_concrete,
    ezP.T3.conditional_expression_concrete,
 ],
 argument_list: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
    ezP.T3.positional_arguments,
    ezP.T3.starred_and_keywords,
    ezP.T3.keywords_arguments,
    ezP.T3.keyword_item,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.lambda_expr,
    ezP.T3.starred_expression,
    ezP.T3.positional_argument,
    ezP.T3.starred_and_keyword,
    ezP.T3.keywords_argument,
    ezP.T3.double_starred_expression,
    ezP.T3.u_expr_concrete,
    ezP.T3.m_expr_concrete,
    ezP.T3.a_expr_concrete,
    ezP.T3.shift_expr_concrete,
    ezP.T3.and_expr_concrete,
    ezP.T3.xor_expr_concrete,
    ezP.T3.or_expr_concrete,
    ezP.T3.comparison_list,
    ezP.T3.or_test_concrete,
    ezP.T3.and_test_concrete,
    ezP.T3.not_test_concrete,
    ezP.T3.conditional_expression_concrete,
 ],
 positional_arguments: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.lambda_expr,
    ezP.T3.starred_expression,
    ezP.T3.positional_argument,
    ezP.T3.u_expr_concrete,
    ezP.T3.m_expr_concrete,
    ezP.T3.a_expr_concrete,
    ezP.T3.shift_expr_concrete,
    ezP.T3.and_expr_concrete,
    ezP.T3.xor_expr_concrete,
    ezP.T3.or_expr_concrete,
    ezP.T3.comparison_list,
    ezP.T3.or_test_concrete,
    ezP.T3.and_test_concrete,
    ezP.T3.not_test_concrete,
    ezP.T3.conditional_expression_concrete,
 ],
 starred_and_keywords: [
    ezP.T3.keyword_item,
    ezP.T3.starred_expression,
    ezP.T3.starred_and_keyword,
 ],
 keywords_arguments: [
    ezP.T3.keyword_item,
    ezP.T3.keywords_argument,
    ezP.T3.double_starred_expression,
 ],
 power: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
    ezP.T3.await_expr,
 ],
 u_expr: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr_concrete,
 ],
 m_expr: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.u_expr_concrete,
    ezP.T3.m_expr_concrete,
 ],
 a_expr: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.u_expr_concrete,
    ezP.T3.m_expr_concrete,
    ezP.T3.a_expr_concrete,
 ],
 shift_expr: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.u_expr_concrete,
    ezP.T3.m_expr_concrete,
    ezP.T3.a_expr_concrete,
    ezP.T3.shift_expr_concrete,
 ],
 and_expr: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.u_expr_concrete,
    ezP.T3.m_expr_concrete,
    ezP.T3.a_expr_concrete,
    ezP.T3.shift_expr_concrete,
    ezP.T3.and_expr_concrete,
 ],
 xor_expr: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.u_expr_concrete,
    ezP.T3.m_expr_concrete,
    ezP.T3.a_expr_concrete,
    ezP.T3.shift_expr_concrete,
    ezP.T3.and_expr_concrete,
    ezP.T3.xor_expr_concrete,
 ],
 or_expr: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.u_expr_concrete,
    ezP.T3.m_expr_concrete,
    ezP.T3.a_expr_concrete,
    ezP.T3.shift_expr_concrete,
    ezP.T3.and_expr_concrete,
    ezP.T3.xor_expr_concrete,
    ezP.T3.or_expr_concrete,
 ],
 comparison: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.u_expr_concrete,
    ezP.T3.m_expr_concrete,
    ezP.T3.a_expr_concrete,
    ezP.T3.shift_expr_concrete,
    ezP.T3.and_expr_concrete,
    ezP.T3.xor_expr_concrete,
    ezP.T3.or_expr_concrete,
    ezP.T3.comparison_list,
 ],
 or_test: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.u_expr_concrete,
    ezP.T3.m_expr_concrete,
    ezP.T3.a_expr_concrete,
    ezP.T3.shift_expr_concrete,
    ezP.T3.and_expr_concrete,
    ezP.T3.xor_expr_concrete,
    ezP.T3.or_expr_concrete,
    ezP.T3.comparison_list,
    ezP.T3.or_test_concrete,
    ezP.T3.and_test_concrete,
    ezP.T3.not_test_concrete,
 ],
 and_test: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.not_test,
    ezP.T3.u_expr_concrete,
    ezP.T3.m_expr_concrete,
    ezP.T3.a_expr_concrete,
    ezP.T3.shift_expr_concrete,
    ezP.T3.and_expr_concrete,
    ezP.T3.xor_expr_concrete,
    ezP.T3.or_expr_concrete,
    ezP.T3.comparison_list,
    ezP.T3.and_test_concrete,
    ezP.T3.not_test_concrete,
 ],
 not_test: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.u_expr_concrete,
    ezP.T3.m_expr_concrete,
    ezP.T3.a_expr_concrete,
    ezP.T3.shift_expr_concrete,
    ezP.T3.and_expr_concrete,
    ezP.T3.xor_expr_concrete,
    ezP.T3.or_expr_concrete,
    ezP.T3.comparison_list,
    ezP.T3.not_test_concrete,
 ],
 conditional_expression: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.u_expr_concrete,
    ezP.T3.m_expr_concrete,
    ezP.T3.a_expr_concrete,
    ezP.T3.shift_expr_concrete,
    ezP.T3.and_expr_concrete,
    ezP.T3.xor_expr_concrete,
    ezP.T3.or_expr_concrete,
    ezP.T3.comparison_list,
    ezP.T3.or_test_concrete,
    ezP.T3.and_test_concrete,
    ezP.T3.not_test_concrete,
    ezP.T3.conditional_expression_concrete,
 ],
 expression: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.lambda_expr,
    ezP.T3.u_expr_concrete,
    ezP.T3.m_expr_concrete,
    ezP.T3.a_expr_concrete,
    ezP.T3.shift_expr_concrete,
    ezP.T3.and_expr_concrete,
    ezP.T3.xor_expr_concrete,
    ezP.T3.or_expr_concrete,
    ezP.T3.comparison_list,
    ezP.T3.or_test_concrete,
    ezP.T3.and_test_concrete,
    ezP.T3.not_test_concrete,
    ezP.T3.conditional_expression_concrete,
 ],
 expression_nocond: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.lambda_expr_nocond,
    ezP.T3.u_expr_concrete,
    ezP.T3.m_expr_concrete,
    ezP.T3.a_expr_concrete,
    ezP.T3.shift_expr_concrete,
    ezP.T3.and_expr_concrete,
    ezP.T3.xor_expr_concrete,
    ezP.T3.or_expr_concrete,
    ezP.T3.comparison_list,
    ezP.T3.or_test_concrete,
    ezP.T3.and_test_concrete,
    ezP.T3.not_test_concrete,
 ],
 expression_list: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.lambda_expr,
    ezP.T3.u_expr_concrete,
    ezP.T3.m_expr_concrete,
    ezP.T3.a_expr_concrete,
    ezP.T3.shift_expr_concrete,
    ezP.T3.and_expr_concrete,
    ezP.T3.xor_expr_concrete,
    ezP.T3.or_expr_concrete,
    ezP.T3.comparison_list,
    ezP.T3.or_test_concrete,
    ezP.T3.and_test_concrete,
    ezP.T3.not_test_concrete,
    ezP.T3.conditional_expression_concrete,
 ],
 starred_list: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.lambda_expr,
    ezP.T3.starred_item,
    ezP.T3.u_expr_concrete,
    ezP.T3.m_expr_concrete,
    ezP.T3.a_expr_concrete,
    ezP.T3.shift_expr_concrete,
    ezP.T3.and_expr_concrete,
    ezP.T3.xor_expr_concrete,
    ezP.T3.or_expr_concrete,
    ezP.T3.comparison_list,
    ezP.T3.or_test_concrete,
    ezP.T3.and_test_concrete,
    ezP.T3.not_test_concrete,
    ezP.T3.conditional_expression_concrete,
    ezP.T3.starred_or_expr,
 ],
 starred_item: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.lambda_expr,
    ezP.T3.u_expr_concrete,
    ezP.T3.m_expr_concrete,
    ezP.T3.a_expr_concrete,
    ezP.T3.shift_expr_concrete,
    ezP.T3.and_expr_concrete,
    ezP.T3.xor_expr_concrete,
    ezP.T3.or_expr_concrete,
    ezP.T3.comparison_list,
    ezP.T3.or_test_concrete,
    ezP.T3.and_test_concrete,
    ezP.T3.not_test_concrete,
    ezP.T3.conditional_expression_concrete,
    ezP.T3.starred_or_expr,
 ],
 positional_argument: [
    ezP.T3.imagnumber,
    ezP.T3.floatnumber,
    ezP.T3.integer,
    ezP.T3.bytesliteral,
    ezP.T3.stringliteral,
    ezP.T3.identifier,
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.literal,
    ezP.T3.parenth_form,
    ezP.T3.list_display,
    ezP.T3.set_display,
    ezP.T3.dict_display,
    ezP.T3.generator_expression,
    ezP.T3.yield_atom,
    ezP.T3.primary,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.call,
    ezP.T3.await_expr,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.lambda_expr,
    ezP.T3.starred_expression,
    ezP.T3.u_expr_concrete,
    ezP.T3.m_expr_concrete,
    ezP.T3.a_expr_concrete,
    ezP.T3.shift_expr_concrete,
    ezP.T3.and_expr_concrete,
    ezP.T3.xor_expr_concrete,
    ezP.T3.or_expr_concrete,
    ezP.T3.comparison_list,
    ezP.T3.or_test_concrete,
    ezP.T3.and_test_concrete,
    ezP.T3.not_test_concrete,
    ezP.T3.conditional_expression_concrete,
 ],
 starred_and_keyword: [
    ezP.T3.keyword_item,
    ezP.T3.starred_expression,
 ],
 keywords_argument: [
    ezP.T3.keyword_item,
    ezP.T3.double_starred_expression,
 ],
 target_list: [
    ezP.T3.identifier,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.target,
    ezP.T3.bracket_target_list,
    ezP.T3.parenth_target_list,
    ezP.T3.starred_target,
 ],
 target: [
    ezP.T3.identifier,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
    ezP.T3.bracket_target_list,
    ezP.T3.parenth_target_list,
    ezP.T3.starred_target,
 ],
 augtarget: [
    ezP.T3.identifier,
    ezP.T3.attributeref,
    ezP.T3.subscription,
    ezP.T3.slicing,
 ],
 module: [
    ezP.T3.identifier,
 ],
 feature: [
    ezP.T3.identifier,
 ],
}

ezP.T3.Provide = {
 imagnumber: [
    ezP.T3.atom,
    ezP.T3.literal,
    ezP.T3.primary,
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 floatnumber: [
    ezP.T3.atom,
    ezP.T3.literal,
    ezP.T3.primary,
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 integer: [
    ezP.T3.atom,
    ezP.T3.literal,
    ezP.T3.primary,
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 bytesliteral: [
    ezP.T3.atom,
    ezP.T3.literal,
    ezP.T3.primary,
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 stringliteral: [
    ezP.T3.atom,
    ezP.T3.literal,
    ezP.T3.primary,
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 identifier: [
    ezP.T3.atom,
    ezP.T3.primary,
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
    ezP.T3.target_list,
    ezP.T3.target,
    ezP.T3.augtarget,
    ezP.T3.module,
    ezP.T3.feature,
 ],
 atom: [
    ezP.T3.primary,
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 enclosure: [
    ezP.T3.atom,
    ezP.T3.primary,
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 literal: [
    ezP.T3.atom,
    ezP.T3.primary,
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 parenth_form: [
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.primary,
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 comp_for: [
    ezP.T3.comp_iter,
 ],
 comp_if: [
    ezP.T3.comp_iter,
 ],
 list_display: [
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.primary,
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 set_display: [
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.primary,
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 dict_display: [
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.primary,
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 key_datum: [
    ezP.T3.key_datum_list,
 ],
 generator_expression: [
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.primary,
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 yield_atom: [
    ezP.T3.atom,
    ezP.T3.enclosure,
    ezP.T3.primary,
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 primary: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 attributeref: [
    ezP.T3.primary,
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
    ezP.T3.target_list,
    ezP.T3.target,
    ezP.T3.augtarget,
 ],
 subscription: [
    ezP.T3.primary,
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
    ezP.T3.target_list,
    ezP.T3.target,
    ezP.T3.augtarget,
 ],
 slicing: [
    ezP.T3.primary,
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
    ezP.T3.target_list,
    ezP.T3.target,
    ezP.T3.augtarget,
 ],
 slice_item: [
    ezP.T3.slice_list,
 ],
 proper_slice: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
 ],
 call: [
    ezP.T3.primary,
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 positional_arguments: [
    ezP.T3.argument_list,
 ],
 starred_and_keywords: [
    ezP.T3.argument_list,
 ],
 keywords_arguments: [
    ezP.T3.argument_list,
 ],
 keyword_item: [
    ezP.T3.argument_list,
    ezP.T3.starred_and_keywords,
    ezP.T3.keywords_arguments,
    ezP.T3.starred_and_keyword,
    ezP.T3.keywords_argument,
 ],
 await_expr: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.power,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 power: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 u_expr: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 m_expr: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 a_expr: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 shift_expr: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 and_expr: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 xor_expr: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 or_expr: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 comparison: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 or_test: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 and_test: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.or_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 not_test: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 conditional_expression: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.expression,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 expression: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 lambda_expr: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.expression,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 lambda_expr_nocond: [
    ezP.T3.expression_nocond,
 ],
 starred_expression: [
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.starred_and_keywords,
    ezP.T3.positional_argument,
    ezP.T3.starred_and_keyword,
 ],
 starred_item: [
    ezP.T3.starred_list,
 ],
 yield_expression_list: [
    ezP.T3.yield_expression,
 ],
 yield_expression_from: [
    ezP.T3.yield_expression,
 ],
 positional_argument: [
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
 ],
 starred_and_keyword: [
    ezP.T3.argument_list,
    ezP.T3.starred_and_keywords,
 ],
 keywords_argument: [
    ezP.T3.argument_list,
    ezP.T3.keywords_arguments,
 ],
 double_starred_expression: [
    ezP.T3.argument_list,
    ezP.T3.keywords_arguments,
    ezP.T3.keywords_argument,
 ],
 u_expr_concrete: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.u_expr,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 m_expr_concrete: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.m_expr,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 a_expr_concrete: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.a_expr,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 shift_expr_concrete: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.shift_expr,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 and_expr_concrete: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.and_expr,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 xor_expr_concrete: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.xor_expr,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 or_expr_concrete: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.or_expr,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 comparison_list: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.comparison,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 or_test_concrete: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.or_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 and_test_concrete: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 not_test_concrete: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.or_test,
    ezP.T3.and_test,
    ezP.T3.not_test,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_nocond,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 conditional_expression_concrete: [
    ezP.T3.slice_list,
    ezP.T3.slice_item,
    ezP.T3.lower_bound,
    ezP.T3.upper_bound,
    ezP.T3.stride,
    ezP.T3.argument_list,
    ezP.T3.positional_arguments,
    ezP.T3.conditional_expression,
    ezP.T3.expression,
    ezP.T3.expression_list,
    ezP.T3.starred_list,
    ezP.T3.starred_item,
    ezP.T3.positional_argument,
 ],
 starred_or_expr: [
    ezP.T3.starred_list,
    ezP.T3.starred_item,
 ],
 target: [
    ezP.T3.target_list,
 ],
 bracket_target_list: [
    ezP.T3.target_list,
    ezP.T3.target,
 ],
 parenth_target_list: [
    ezP.T3.target_list,
    ezP.T3.target,
 ],
 starred_target: [
    ezP.T3.target_list,
    ezP.T3.target,
 ],
}
