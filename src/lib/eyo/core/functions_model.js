/**
 * edython
 *
 * Copyright 2018 Jérôme LAURENS.
 *
 * License EUPL-1.2
 */

/**
 * @fileoverview functions model. Automatically generated by `bin/helpers/functionsbot.py`
 * @author jerome.laurens@u-bourgogne.fr (Jérôme LAURENS)
 */
'use strict'

goog.provide('eYo.Model.functions')

goog.require('eYo.Model')

eYo.Model.functions.data = {
  categories: [
    'built-in-functions'
  ],
  types: [
    'function',
    'class'
  ],
  items: [
    {
      name: 'abs',
      category: 0,
      type: 0,
      ary: 1,
      arguments: [
        {
          name: 'x'
        }
      ]
    },
    {
      name: 'all',
      category: 0,
      type: 0,
      ary: 1,
      arguments: [
        {
          name: 'iterable'
        }
      ]
    },
    {
      name: 'any',
      category: 0,
      type: 0,
      ary: 1,
      arguments: [
        {
          name: 'iterable'
        }
      ]
    },
    {
      name: 'ascii',
      category: 0,
      type: 0,
      ary: 1,
      arguments: [
        {
          name: 'object'
        }
      ]
    },
    {
      name: 'bin',
      category: 0,
      type: 0,
      ary: 1,
      arguments: [
        {
          name: 'x'
        }
      ]
    },
    {
      name: 'bool',
      category: 0,
      type: 1,
      ary: 1,
      mandatory: 0,
      arguments: [
        {
          name: 'x',
          optional: true
        }
      ]
    },
    {
      name: 'callable',
      category: 0,
      type: 0,
      ary: 1,
      arguments: [
        {
          name: 'object'
        }
      ]
    },
    {
      name: 'chr',
      category: 0,
      type: 0,
      ary: 1,
      arguments: [
        {
          name: 'i'
        }
      ]
    },
    {
      name: 'classmethod',
      class: '@',
      category: 0,
      type: 0
    },
    {
      name: 'compile',
      category: 0,
      type: 0,
      ary: 6,
      mandatory: 3,
      arguments: [
        {
          name: 'source'
        },
        {
          name: 'filename'
        },
        {
          name: 'mode'
        },
        {
          name: 'flags',
          default: 0
        },
        {
          name: 'dont_inherit',
          default: 'False'
        },
        {
          name: 'optimize',
          default: -1
        }
      ]
    },
    {
      name: 'complex',
      category: 0,
      type: 1,
      ary: 2,
      mandatory: 0,
      arguments: [
        {
          name: 'real',
          optional: true
        },
        {
          name: 'imag',
          optional: true
        }
      ]
    },
    {
      name: 'delattr',
      category: 0,
      type: 0,
      stmt: true,
      ary: 2,
      arguments: [
        {
          name: 'object'
        },
        {
          name: 'name'
        }
      ]
    },
    {
      name: 'dir',
      category: 0,
      type: 0,
      ary: 1,
      mandatory: 0,
      arguments: [
        {
          name: 'object',
          optional: true
        }
      ]
    },
    {
      name: 'divmod',
      category: 0,
      type: 0,
      ary: 2,
      arguments: [
        {
          name: 'a'
        },
        {
          name: 'b'
        }
      ]
    },
    {
      name: 'enumerate',
      category: 0,
      type: 0,
      ary: 2,
      mandatory: 1,
      arguments: [
        {
          name: 'iterable'
        },
        {
          name: 'start',
          default: 0
        }
      ]
    },
    {
      name: 'eval',
      category: 0,
      type: 0,
      ary: 3,
      mandatory: 1,
      arguments: [
        {
          name: 'expression'
        },
        {
          name: 'globals',
          default: 'None'
        },
        {
          name: 'locals',
          default: 'None'
        }
      ]
    },
    {
      name: 'exec',
      category: 0,
      type: 0,
      ary: 3,
      mandatory: 1,
      arguments: [
        {
          name: 'object'
        },
        {
          name: 'globals',
          optional: true
        },
        {
          name: 'locals',
          optional: true
        }
      ]
    },
    {
      name: 'filter',
      category: 0,
      type: 0,
      ary: 2,
      arguments: [
        {
          name: 'function'
        },
        {
          name: 'iterable'
        }
      ]
    },
    {
      name: 'float',
      category: 0,
      type: 1,
      ary: 1,
      mandatory: 0,
      arguments: [
        {
          name: 'x',
          optional: true
        }
      ]
    },
    {
      name: 'format',
      category: 0,
      type: 0,
      ary: 2,
      mandatory: 1,
      arguments: [
        {
          name: 'value'
        },
        {
          name: 'format_spec',
          optional: true
        }
      ]
    },
    {
      name: 'getattr',
      category: 0,
      type: 0,
      ary: 3,
      mandatory: 2,
      arguments: [
        {
          name: 'object'
        },
        {
          name: 'name'
        },
        {
          name: 'default',
          optional: true
        }
      ]
    },
    {
      name: 'globals',
      category: 0,
      type: 0
    },
    {
      name: 'hasattr',
      category: 0,
      type: 0,
      ary: 2,
      arguments: [
        {
          name: 'object'
        },
        {
          name: 'name'
        }
      ]
    },
    {
      name: 'hash',
      category: 0,
      type: 0,
      ary: 1,
      arguments: [
        {
          name: 'object'
        }
      ]
    },
    {
      name: 'help',
      category: 0,
      type: 0,
      stmt: true,
      ary: 1,
      mandatory: 0,
      arguments: [
        {
          name: 'object',
          optional: true
        }
      ]
    },
    {
      name: 'hex',
      category: 0,
      type: 0,
      ary: 1,
      arguments: [
        {
          name: 'x'
        }
      ]
    },
    {
      name: 'id',
      category: 0,
      type: 0,
      ary: 1,
      arguments: [
        {
          name: 'object'
        }
      ]
    },
    {
      name: 'input',
      category: 0,
      type: 0,
      ary: 1,
      mandatory: 0,
      arguments: [
        {
          name: 'prompt',
          optional: true
        }
      ]
    },
    {
      name: 'int',
      category: 0,
      type: 1,
      ary: 2,
      mandatory: 0,
      arguments: [
        {
          name: 'x',
          default: 0
        },
        {
          name: 'base',
          default: 10
        }
      ]
    },
    {
      name: 'isinstance',
      category: 0,
      type: 0,
      ary: 2,
      arguments: [
        {
          name: 'object'
        },
        {
          name: 'classinfo'
        }
      ]
    },
    {
      name: 'issubclass',
      category: 0,
      type: 0,
      ary: 2,
      arguments: [
        {
          name: 'class'
        },
        {
          name: 'classinfo'
        }
      ]
    },
    {
      name: 'iter',
      category: 0,
      type: 0,
      ary: 2,
      mandatory: 1,
      arguments: [
        {
          name: 'object'
        },
        {
          name: 'sentinel',
          optional: true
        }
      ]
    },
    {
      name: 'len',
      category: 0,
      type: 0,
      ary: 1,
      arguments: [
        {
          name: 's'
        }
      ]
    },
    {
      name: 'locals',
      category: 0,
      type: 0
    },
    {
      name: 'map',
      category: 0,
      type: 0,
      ary: 3,
      arguments: [
        {
          name: 'function'
        },
        {
          name: 'iterable'
        },
        {
          name: '...'
        }
      ]
    },
    {
      name: 'max',
      category: 0,
      type: 0,
      ary: Infinity,
      mandatory: 2,
      arguments: [
        {
          name: 'iterable'
        },
        {
          name: '*'
        },
        {
          name: 'key',
          optional: true
        },
        {
          name: 'default',
          optional: true
        }
      ]
    },
    {
      name: 'min',
      category: 0,
      type: 0,
      ary: Infinity,
      mandatory: 2,
      arguments: [
        {
          name: 'iterable'
        },
        {
          name: '*'
        },
        {
          name: 'key',
          optional: true
        },
        {
          name: 'default',
          optional: true
        }
      ]
    },
    {
      name: 'next',
      category: 0,
      type: 0,
      ary: 2,
      mandatory: 1,
      arguments: [
        {
          name: 'iterator'
        },
        {
          name: 'default',
          optional: true
        }
      ]
    },
    {
      name: 'object',
      category: 0,
      type: 1
    },
    {
      name: 'oct',
      category: 0,
      type: 0,
      ary: 1,
      arguments: [
        {
          name: 'x'
        }
      ]
    },
    {
      name: 'open',
      category: 0,
      type: 0,
      ary: 8,
      mandatory: 1,
      arguments: [
        {
          name: 'file'
        },
        {
          name: 'mode',
          default: '\'r\''
        },
        {
          name: 'buffering',
          default: -1
        },
        {
          name: 'encoding',
          default: 'None'
        },
        {
          name: 'errors',
          default: 'None'
        },
        {
          name: 'newline',
          default: 'None'
        },
        {
          name: 'closefd',
          default: 'True'
        },
        {
          name: 'opener',
          default: 'None'
        }
      ]
    },
    {
      name: 'ord',
      category: 0,
      type: 0,
      ary: 1,
      arguments: [
        {
          name: 'c'
        }
      ]
    },
    {
      name: 'pow',
      category: 0,
      type: 0,
      ary: 3,
      mandatory: 2,
      arguments: [
        {
          name: 'x'
        },
        {
          name: 'y'
        },
        {
          name: 'z',
          optional: true
        }
      ]
    },
    {
      name: 'print',
      category: 0,
      type: 0,
      stmt: true,
      ary: Infinity,
      mandatory: 1,
      arguments: [
        {
          name: '*objects'
        },
        {
          name: 'sep',
          default: '\''
        },
        {
          name: 'end',
          default: '\'\n\''
        },
        {
          name: 'file',
          default: 'sys.stdout'
        },
        {
          name: 'flush',
          default: 'False'
        }
      ]
    },
    {
      name: 'property',
      category: 0,
      type: 1,
      ary: 4,
      mandatory: 0,
      arguments: [
        {
          name: 'fget',
          default: 'None'
        },
        {
          name: 'fset',
          default: 'None'
        },
        {
          name: 'fdel',
          default: 'None'
        },
        {
          name: 'doc',
          default: 'None'
        }
      ]
    },
    {
      name: 'repr',
      category: 0,
      type: 0,
      ary: 1,
      arguments: [
        {
          name: 'object'
        }
      ]
    },
    {
      name: 'reversed',
      category: 0,
      type: 0,
      ary: 1,
      arguments: [
        {
          name: 'seq'
        }
      ]
    },
    {
      name: 'round',
      category: 0,
      type: 0,
      ary: 2,
      mandatory: 1,
      arguments: [
        {
          name: 'number'
        },
        {
          name: 'ndigits',
          optional: true
        }
      ]
    },
    {
      name: 'setattr',
      category: 0,
      type: 0,
      stmt: true,
      ary: 3,
      arguments: [
        {
          name: 'object'
        },
        {
          name: 'name'
        },
        {
          name: 'value'
        }
      ]
    },
    {
      name: 'slice',
      category: 0,
      type: 1,
      ary: 3,
      mandatory: 2,
      arguments: [
        {
          name: 'stop'
        },
        {
          name: 'stop'
        },
        {
          name: 'step',
          optional: true
        }
      ]
    },
    {
      name: 'sorted',
      category: 0,
      type: 0,
      ary: Infinity,
      mandatory: 2,
      arguments: [
        {
          name: 'iterable'
        },
        {
          name: '*'
        },
        {
          name: 'key',
          default: 'None'
        },
        {
          name: 'reverse',
          default: 'False'
        }
      ]
    },
    {
      name: 'staticmethod',
      class: '@',
      category: 0,
      type: 0
    },
    {
      name: 'sum',
      category: 0,
      type: 0,
      ary: 2,
      mandatory: 1,
      arguments: [
        {
          name: 'iterable'
        },
        {
          name: 'start',
          optional: true
        }
      ]
    },
    {
      name: 'super',
      category: 0,
      type: 0,
      ary: 2,
      mandatory: 0,
      arguments: [
        {
          name: 'type',
          optional: true
        },
        {
          name: 'object-or-type',
          optional: true
        }
      ]
    },
    {
      name: 'type',
      category: 0,
      type: 1,
      ary: 3,
      arguments: [
        {
          name: 'object'
        },
        {
          name: 'bases'
        },
        {
          name: 'dict'
        }
      ]
    },
    {
      name: 'vars',
      category: 0,
      type: 0,
      ary: 1,
      mandatory: 0,
      arguments: [
        {
          name: 'object',
          optional: true
        }
      ]
    },
    {
      name: 'zip',
      category: 0,
      type: 0,
      ary: Infinity,
      mandatory: 1,
      arguments: [
        {
          name: '*iterables'
        }
      ]
    },
    {
      name: '__import__',
      category: 0,
      type: 0,
      stmt: true,
      ary: 5,
      mandatory: 1,
      arguments: [
        {
          name: 'name'
        },
        {
          name: 'globals',
          default: 'None'
        },
        {
          name: 'locals',
          default: 'None'
        },
        {
          name: 'fromlist',
          default: '()'
        },
        {
          name: 'level',
          default: 0
        }
      ]
    }
  ],
  by_name: {
    'ascii': 3,
    'isinstance': 29,
    'pow': 42,
    'all': 1,
    'staticmethod': 51,
    'eval': 15,
    'min': 36,
    'repr': 45,
    'enumerate': 14,
    'callable': 6,
    'object': 38,
    'issubclass': 30,
    'input': 27,
    'super': 53,
    'bin': 4,
    'classmethod': 8,
    'ord': 41,
    'int': 28,
    'help': 24,
    'bool': 5,
    'property': 44,
    'len': 32,
    'globals': 21,
    'filter': 17,
    'open': 40,
    'id': 26,
    'hash': 23,
    'format': 19,
    'print': 43,
    'round': 47,
    'reversed': 46,
    'dir': 12,
    'chr': 7,
    'sorted': 50,
    'vars': 55,
    'slice': 49,
    'sum': 52,
    'abs': 0,
    'setattr': 48,
    'hasattr': 22,
    'any': 2,
    'iter': 31,
    'getattr': 20,
    'divmod': 13,
    'complex': 10,
    'exec': 16,
    '__import__': 57,
    'max': 35,
    'delattr': 11,
    'type': 54,
    'map': 34,
    'next': 37,
    'locals': 33,
    'zip': 56,
    'hex': 25,
    'oct': 39,
    'compile': 9,
    'float': 18
  },
  by_category: {
    0: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57]
  },
  by_type: {
    0: [0, 1, 2, 3, 4, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57],
    1: [5, 10, 18, 28, 38, 44, 49, 54]
  }
}

/**
 * Get the item with the given key
 * @param {!String|Number} key  The key or index of the item
 * @return {?Object} return the model object for that item, if any.
 */
eYo.Model.functions.getItem = function (key) {
  if (!goog.isNumber(key)) {
    key = eYo.Model.functions.data.by_name[key]
  }
  if (goog.isNumber(key)) {
    return eYo.Model.functions.data.items[key]
  }
}

/**
 * Get the indices of the items for the given category
 * @param {!String} key  The name of the category
 * @return {!Array} the list of item indices with the given category (possibly void).
 */
eYo.Model.functions.getItemsInCategory = function (category, type) {
  var ra = eYo.Model.functions.data.by_category[category] || []
  if (goog.isString(type)) {
    type = eYo.Model.functions.data.type.indexOf(type)
  }
  if (goog.isNumber(type) && type >= 0) {
    var ra2 = []
    for (var i = 0; i < ra.length ; i++ ) {
      var item = eYo.Model.functions.getItem(i)
      if (item && item.type === type) {
        ra2.append(i)
      }
    }
    return ra2
  } else {
    return ra
  }
}

// This file was generated by `./bin/helpers/functionsbot.py` on 2018-07-24 08:07:04.685290


