/**
 * edython
 *
 * Copyright 2018 Jérôme LAURENS.
 *
 * License EUPL-1.2
 */

/**
 * @fileoverview random model. Automatically generated by `bin/helpers/randombot.py random`
 * @author jerome.laurens@u-bourgogne.fr (Jérôme LAURENS)
 */
'use strict'

goog.provide('eYo.Model.random__module')

goog.require('eYo.Model')

eYo.Model.random__module.data = {
  prefix: 'random.',
  categories: [
    'bookkeeping-functions',
    'functions-for-integers',
    'functions-for-sequences',
    'real-valued-distributions',
    'alternative-generator'
  ],
  types: [
    'function',
    'class'
  ],
  items: [
    {
      names: ['seed'],
      category: 0,
      type: 0,
      stmt: true,
      ary: 2,
      mandatory: 0,
      arguments: [
        {
          name: 'a',
          default: 'None'
        },
        {
          name: 'version',
          default: '2'
        }
      ]
    },
    {
      names: ['getstate'],
      category: 0,
      type: 0
    },
    {
      names: ['setstate'],
      category: 0,
      type: 0,
      stmt: true,
      ary: 1,
      mandatory: 1,
      arguments: [
        {
          name: 'state'
        }
      ]
    },
    {
      names: ['getrandbits'],
      category: 0,
      type: 0,
      ary: 1,
      mandatory: 1,
      arguments: [
        {
          name: 'k'
        }
      ]
    },
    {
      names: ['randrange', 'randrange'],
      category: 1,
      type: 0,
      ary: 1,
      mandatory: 1,
      arguments: [
        {
          name: 'stop'
        }
      ]
    },
    {
      names: ['randint'],
      category: 1,
      type: 0,
      ary: 2,
      mandatory: 2,
      arguments: [
        {
          name: 'a'
        },
        {
          name: 'b'
        }
      ]
    },
    {
      names: ['choice'],
      category: 2,
      type: 0,
      ary: 1,
      mandatory: 1,
      arguments: [
        {
          name: 'seq'
        }
      ]
    },
    {
      names: ['choices'],
      category: 2,
      type: 0,
      ary: 5,
      mandatory: 2,
      arguments: [
        {
          name: 'population'
        },
        {
          name: 'weights',
          default: 'None'
        },
        {
          name: '*'
        },
        {
          name: 'cum_weights',
          default: 'None'
        },
        {
          name: 'k',
          default: '1'
        }
      ]
    },
    {
      names: ['shuffle'],
      category: 2,
      type: 0,
      stmt: true,
      ary: 2,
      mandatory: 2,
      arguments: [
        {
          name: 'x'
        },
        {
          name: 'random'
        }
      ]
    },
    {
      names: ['sample'],
      category: 2,
      type: 0,
      ary: 2,
      mandatory: 2,
      arguments: [
        {
          name: 'population'
        },
        {
          name: 'k'
        }
      ]
    },
    {
      names: ['random'],
      category: 3,
      type: 0
    },
    {
      names: ['uniform'],
      category: 3,
      type: 0,
      ary: 2,
      mandatory: 2,
      arguments: [
        {
          name: 'a'
        },
        {
          name: 'b'
        }
      ]
    },
    {
      names: ['triangular'],
      category: 3,
      type: 0,
      ary: 3,
      mandatory: 3,
      arguments: [
        {
          name: 'low'
        },
        {
          name: 'high'
        },
        {
          name: 'mode'
        }
      ]
    },
    {
      names: ['betavariate'],
      category: 3,
      type: 0,
      ary: 2,
      mandatory: 2,
      arguments: [
        {
          name: 'alpha'
        },
        {
          name: 'beta'
        }
      ]
    },
    {
      names: ['expovariate'],
      category: 3,
      type: 0,
      ary: 1,
      mandatory: 1,
      arguments: [
        {
          name: 'lambd'
        }
      ]
    },
    {
      names: ['gammavariate'],
      category: 3,
      type: 0,
      ary: 2,
      mandatory: 2,
      arguments: [
        {
          name: 'alpha'
        },
        {
          name: 'beta'
        }
      ]
    },
    {
      names: ['gauss'],
      category: 3,
      type: 0,
      ary: 2,
      mandatory: 2,
      arguments: [
        {
          name: 'mu'
        },
        {
          name: 'sigma'
        }
      ]
    },
    {
      names: ['lognormvariate'],
      category: 3,
      type: 0,
      ary: 2,
      mandatory: 2,
      arguments: [
        {
          name: 'mu'
        },
        {
          name: 'sigma'
        }
      ]
    },
    {
      names: ['normalvariate'],
      category: 3,
      type: 0,
      ary: 2,
      mandatory: 2,
      arguments: [
        {
          name: 'mu'
        },
        {
          name: 'sigma'
        }
      ]
    },
    {
      names: ['vonmisesvariate'],
      category: 3,
      type: 0,
      ary: 2,
      mandatory: 2,
      arguments: [
        {
          name: 'mu'
        },
        {
          name: 'kappa'
        }
      ]
    },
    {
      names: ['paretovariate'],
      category: 3,
      type: 0,
      ary: 1,
      mandatory: 1,
      arguments: [
        {
          name: 'alpha'
        }
      ]
    },
    {
      names: ['weibullvariate'],
      category: 3,
      type: 0,
      ary: 2,
      mandatory: 2,
      arguments: [
        {
          name: 'alpha'
        },
        {
          name: 'beta'
        }
      ]
    },
    {
      names: ['SystemRandom'],
      category: 4,
      type: 1,
      stmt: true,
      ary: 2,
      mandatory: 2,
      arguments: [
        {
          name: 'class'
        },
        {
          name: 'seed'
        }
      ]
    }
  ],
  by_name: {
    'random': 10,
    'randrange': 4,
    'expovariate': 14,
    'choice': 6,
    'randint': 5,
    'lognormvariate': 17,
    'triangular': 12,
    'getstate': 1,
    'SystemRandom': 22,
    'vonmisesvariate': 19,
    'choices': 7,
    'seed': 0,
    'gammavariate': 15,
    'gauss': 16,
    'paretovariate': 20,
    'sample': 9,
    'shuffle': 8,
    'normalvariate': 18,
    'setstate': 2,
    'betavariate': 13,
    'weibullvariate': 21,
    'getrandbits': 3,
    'uniform': 11
  },
  by_category: {
    0: [0, 1, 2, 3],
    4: [22],
    1: [4, 5],
    3: [10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21],
    2: [6, 7, 8, 9]
  },
  by_type: {
    1: [22],
    0: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]
  }
}

/**
 * Get the item with the given key
 * @param {!String|Number} key  The key or index of the item
 * @return {?Object} return the model object for that item, if any.
 */
eYo.Model.random__module.getItem = function (key) {
  if (!goog.isNumber(key)) {
    key = eYo.Model.random__module.data.by_name[key]
  }
  if (goog.isNumber(key)) {
    return eYo.Model.random__module.data.items[key]
  }
}

/**
 * Get the indices of the items for the given category
 * @param {!String} key  The name of the category
 * @return {!Array} the list of item indices with the given category (possibly void).
 */
eYo.Model.random__module.getItemsInCategory = function (category, type) {
  var ra = eYo.Model.random__module.data.by_category[category] || []
  if (goog.isString(type)) {
    type = eYo.Model.random__module.data.type.indexOf(type)
  }
  if (goog.isNumber(type) && type >= 0) {
    var ra2 = []
    for (var i = 0; i < ra.length ; i++ ) {
      var item = eYo.Model.random__module.getItem(i)
      if (item && item.type === type) {
        ra2.append(i)
      }
    }
    return ra2
  } else {
    return ra
  }
}

// This file was generated by `./bin/helpers/{module}bot.py` on 2018-07-10 15:52:24.801183


