/**
 * edython
 *
 * Copyright 2018 Jérôme LAURENS.
 *
 * License EUPL-1.2
 */

/**
 * @fileoverview decimal model. Automatically generated by `python3 bin/helpers/modulebot.py [--no-suffix] decimal`
 * @author jerome.laurens@u-bourgogne.fr (Jérôme LAURENS)
 */
'use strict'

goog.provide('eYo.Model.decimal')
goog.provide('eYo.Model.decimal.Item')

goog.require('eYo.Model')
goog.require('eYo.Model.Item')

/**
 * @constructor
 * @param {*} model 
 */
eYo.Model.decimal.Item = function (model) {
  eYo.Model.decimal.Item.constructor.call(this, model)
}

var Item = eYo.Model.decimal.Item

goog.inherits(Item, eYo.Model.Item)

/**
 * model
 */
Item.prototype.model = eYo.Model.decimal


eYo.Model.decimal.data = {
  categories: [
    'decimal-objects',
    'context-objects',
    'constants',
    'rounding-modes',
    'signals'
  ],
  types: [
    'class',
    'function',
    'data'
  ],
  items: [
    new Item({
      name: 'Decimal',
      class: 'decimal',
      category: 0,
      type_: 0,
      ary: 2,
      mandatory: 0,
      arguments: [
        {
          name: 'value',
          default: '"0"'
        },
        {
          name: 'context',
          default: 'None'
        }
      ]
    }),
    new Item({
      name: 'getcontext',
      class: 'decimal',
      category: 1,
      type_: 1
    }),
    new Item({
      name: 'setcontext',
      class: 'decimal',
      category: 1,
      type_: 1,
      stmt: true,
      ary: 1,
      arguments: [
        {
          name: 'c'
        }
      ]
    }),
    new Item({
      name: 'localcontext',
      class: 'decimal',
      category: 1,
      type_: 1,
      ary: 1,
      mandatory: 0,
      arguments: [
        {
          name: 'ctx',
          default: 'None'
        }
      ]
    }),
    new Item({
      name: 'BasicContext',
      category: 1,
      type_: 0
    }),
    new Item({
      name: 'ExtendedContext',
      category: 1,
      type_: 0
    }),
    new Item({
      name: 'DefaultContext',
      category: 1,
      type_: 0
    }),
    new Item({
      name: 'Context',
      class: 'decimal',
      category: 1,
      type_: 0,
      ary: 8,
      mandatory: 0,
      arguments: [
        {
          name: 'prec',
          default: 'None'
        },
        {
          name: 'rounding',
          default: 'None'
        },
        {
          name: 'Emin',
          default: 'None'
        },
        {
          name: 'Emax',
          default: 'None'
        },
        {
          name: 'capitals',
          default: 'None'
        },
        {
          name: 'clamp',
          default: 'None'
        },
        {
          name: 'flags',
          default: 'None'
        },
        {
          name: 'traps',
          default: 'None'
        }
      ]
    }),
    new Item({
      name: 'HAVE_THREADS',
      category: 2,
      type_: 2
    }),
    new Item({
      name: 'ROUND_CEILING',
      category: 3,
      type_: 2
    }),
    new Item({
      name: 'ROUND_DOWN',
      category: 3,
      type_: 2
    }),
    new Item({
      name: 'ROUND_FLOOR',
      category: 3,
      type_: 2
    }),
    new Item({
      name: 'ROUND_HALF_DOWN',
      category: 3,
      type_: 2
    }),
    new Item({
      name: 'ROUND_HALF_EVEN',
      category: 3,
      type_: 2
    }),
    new Item({
      name: 'ROUND_HALF_UP',
      category: 3,
      type_: 2
    }),
    new Item({
      name: 'ROUND_UP',
      category: 3,
      type_: 2
    }),
    new Item({
      name: 'ROUND_05UP',
      category: 3,
      type_: 2
    }),
    new Item({
      name: 'Clamped',
      category: 4,
      type_: 0
    }),
    new Item({
      name: 'DecimalException',
      category: 4,
      type_: 0
    }),
    new Item({
      name: 'DivisionByZero',
      category: 4,
      type_: 0
    }),
    new Item({
      name: 'Inexact',
      category: 4,
      type_: 0
    }),
    new Item({
      name: 'InvalidOperation',
      category: 4,
      type_: 0
    }),
    new Item({
      name: 'Overflow',
      category: 4,
      type_: 0
    }),
    new Item({
      name: 'Rounded',
      category: 4,
      type_: 0
    }),
    new Item({
      name: 'Subnormal',
      category: 4,
      type_: 0
    }),
    new Item({
      name: 'Underflow',
      category: 4,
      type_: 0
    }),
    new Item({
      name: 'FloatOperation',
      category: 4,
      type_: 0
    })
  ],
  by_name: {
    'ROUND_FLOOR': 11,
    'BasicContext': 4,
    'ROUND_HALF_UP': 14,
    'localcontext': 3,
    'DivisionByZero': 19,
    'ROUND_HALF_EVEN': 13,
    'Inexact': 20,
    'Overflow': 22,
    'Clamped': 17,
    'ExtendedContext': 5,
    'ROUND_DOWN': 10,
    'Underflow': 25,
    'HAVE_THREADS': 8,
    'getcontext': 1,
    'Context': 7,
    'Decimal': 0,
    'ROUND_05UP': 16,
    'Subnormal': 24,
    'FloatOperation': 26,
    'Rounded': 23,
    'ROUND_UP': 15,
    'InvalidOperation': 21,
    'ROUND_HALF_DOWN': 12,
    'ROUND_CEILING': 9,
    'DefaultContext': 6,
    'DecimalException': 18,
    'setcontext': 2
  },
  by_category: {
    3: [9, 10, 11, 12, 13, 14, 15, 16],
    2: [8],
    4: [17, 18, 19, 20, 21, 22, 23, 24, 25, 26],
    1: [1, 2, 3, 4, 5, 6, 7],
    0: [0]
  },
  by_type: {
    1: [1, 2, 3],
    2: [8, 9, 10, 11, 12, 13, 14, 15, 16],
    0: [0, 4, 5, 6, 7, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26]
  }
}
/**
 * Get the item with the given key
 * @param {!String|Number} key  The key or index of the item
 * @return {?Object} return the model object for that item, if any.
 */
eYo.Model.decimal.getItem = function (key) {
  if (!goog.isNumber(key)) {
    key = eYo.Model.decimal.data.by_name[key]
  }
  if (goog.isNumber(key)) {
    return eYo.Model.decimal.data.items[key]
  }
}

/**
 * Get the type of the given item.
 * @param {!Object} item.
 * @return {?String} return the type.
 */
eYo.Model.decimal.getType = function (item) {
  return item && item.type && eYo.Model.decimal.data.types[item.type]
}

/**
 * Get the indices of the items for the given category
 * @param {!String} key  The name of the category
 * @return {!Array} the list of item indices with the given category (possibly void).
 */
eYo.Model.decimal.getItemsInCategory = function (category, type) {
  var ra = eYo.Model.decimal.data.by_category[category] || []
  if (goog.isString(type)) {
    type = eYo.Model.decimal.data.type.indexOf(type)
  }
  if (goog.isNumber(type) && type >= 0) {
    var ra2 = []
    for (var i = 0; i < ra.length ; i++ ) {
      var item = eYo.Model.decimal.getItem(i)
      if (item && item.type === type) {
        ra2.append(i)
      }
    }
    return ra2
  } else {
    return ra
  }
}

// This file was generated by `./bin/helpers/decimalbot.py` on 2018-10-19 23:29:21.455187


