// This file was generated by "python types.py" on 2018-05-08 19:58:06.937417

/**
 * edython
 *
 * Copyright 2018 Jérôme LAURENS.
 *
 * License CeCILL-B
 */
/**
 * @fileoverview Type constants for edython, used as blocks prototypes.
 * @author jerome.laurens@u-bourgogne.fr (Jérôme LAURENS)
 */
'use strict'

/**
 * @name edY.T3
 * @namespace
 **/

goog.provide('edY.T3')
goog.provide('edY.T3.Expr')
goog.provide('edY.T3.Stmt')

goog.require('edY')


edY.T3 = {}

edY.T3.Stmt = {
// part statements
  if_part                   /*   ::= "if" expression ":"                                (The if statement) */ : "edy:if_part",
  elif_part                 /*   ::= "elif" expression ":"                              (The if statement) */ : "edy:elif_part",
  else_part                 /*   ::= "else" ":"                                         (The if statement) */ : "edy:else_part",
  last_else_part            /*   ::= else_part                                          (The if statement) */ : "edy:last_else_part",
  while_part                /*   ::= "while" expression ":"                             (The while statement) */ : "edy:while_part",
  for_part                  /*   ::= "for" target_list "in" expression_list ":"         (The for statement) */ : "edy:for_part",
  try_part                  /*   ::=                                                    (The try statement) */ : "edy:try_part",
  except_part               /*   ::=                                                    (The try statement) */ : "edy:except_part",
  void_except_part          /*   ::= "except" ":"                                       (The try statement) */ : "edy:void_except_part",
  finally_part              /*   ::=                                                    (The try statement) */ : "edy:finally_part",
  try_else_part             /*   ::= else_part                                          (The try statement) */ : "edy:try_else_part",
  with_part                 /*   ::= "with" with_item_list ":"                          (The with statement) */ : "edy:with_part",
  funcdef_part              /*   ::= ["async"] "def" funcname "(" [parameter_list] ")" ["->" expression] ":" SUITE (Coroutines) */ : "edy:funcdef_part",
  classdef_part             /*   ::= "class" classname ['(' argument_list ')'] ':'      (Class definitions) */ : "edy:classdef_part",
// other simple statements
  expression_stmt           /*   ::= starred_expression                                 (Expression statements) */ : "edy:expression_stmt",
  assignment_stmt           /*   ::= target_list_list "=" assigned_list                 (Assignment statements) */ : "edy:assignment_stmt",
  augmented_assignment_stmt /*   ::= augtarget augop augassigned_list                   (Assignment statements) */ : "edy:augmented_assignment_stmt",
  annotated_assignment_stmt /*   ::= augtarget ":" expression ["=" expression]          (Assignment statements) */ : "edy:annotated_assignment_stmt",
  assert_stmt               /*   ::= "assert" expression ["," expression]               (The assert statement) */ : "edy:assert_stmt",
  pass_stmt                 /*   ::= "pass"                                             (The pass statement) */ : "edy:pass_stmt",
  del_stmt                  /*   ::= "del" target_list                                  (The del statement) */ : "edy:del_stmt",
  return_stmt               /*   ::= "return" [expression_list]                         (The return statement) */ : "edy:return_stmt",
  yield_stmt                /*   ::= yield_expression                                   (The yield statement) */ : "edy:yield_stmt",
  raise_stmt                /*   ::= "raise" [expression ["from" expression]]           (The raise statement) */ : "edy:raise_stmt",
  break_stmt                /*   ::= "break"                                            (The break statement) */ : "edy:break_stmt",
  continue_stmt             /*   ::= "continue"                                         (The continue statement) */ : "edy:continue_stmt",
  import_stmt               /*   ::= "import" non_void_module_as_list | "from" relative_module "import" non_void_import_identifier_as_list | "from" module "import" "*" (The import statement) */ : "edy:import_stmt",
  future_statement          /*   ::= "from" "__future__" "import" feature ["as" name] ("," feature ["as" name])* | "from" "__future__" "import" "(" feature ["as" name] ("," feature ["as" name])* [","] ")" (default) */ : "edy:future_statement",
  start_stmt                /*   ::= green flag statement                               (The nonlocal statement) */ : "edy:start_stmt",
  docstring_top_stmt        /*   ::= longstringliteral+{1}                              (The import statement) */ : "edy:docstring_top_stmt",
  global_nonlocal_stmt      /*   ::= ("global"|"nonlocal") non_void_identifier_list     (The nonlocal statement) */ : "edy:global_nonlocal_stmt",
  decorator                 /*   ::= "@" dotted_name ["(" [argument_list [","]] ")"] NEWLINE (Function definitions) */ : "edy:decorator",
  docstring_def_stmt        /*   ::= longstringliteral +{1}                             (Class definitions) */ : "edy:docstring_def_stmt",
  any_stmt                  /*   ::= any statement of nothing                           (Coroutines) */ : "edy:any_stmt",
  call_stmt                 /*   ::= call_expr                                          (Coroutines) */ : "edy:call_stmt",
  builtin_print_stmt        /*   ::= builtin_print_expr                                 (Coroutines) */ : "edy:builtin_print_stmt",
// compound statements
}

edY.T3.Stmt.Previous = {
  import_stmt: [ // count 5
    edY.T3.Stmt.import_stmt,
    edY.T3.Stmt.future_statement,
    edY.T3.Stmt.start_stmt,
    edY.T3.Stmt.docstring_top_stmt,
    edY.T3.Stmt.any_stmt,
  ],
  future_statement: [ // count 5
    edY.T3.Stmt.import_stmt,
    edY.T3.Stmt.future_statement,
    edY.T3.Stmt.start_stmt,
    edY.T3.Stmt.docstring_top_stmt,
    edY.T3.Stmt.any_stmt,
  ],
  docstring_top_stmt: [ // count 3
    edY.T3.Stmt.start_stmt,
    edY.T3.Stmt.docstring_top_stmt,
    edY.T3.Stmt.any_stmt,
  ],
  elif_part: [ // count 3
    edY.T3.Stmt.if_part,
    edY.T3.Stmt.elif_part,
    edY.T3.Stmt.any_stmt,
  ],
  else_part: [ // count 6
    edY.T3.Stmt.if_part,
    edY.T3.Stmt.elif_part,
    edY.T3.Stmt.while_part,
    edY.T3.Stmt.except_part,
    edY.T3.Stmt.void_except_part,
    edY.T3.Stmt.any_stmt,
  ],
  last_else_part: [ // count 4
    edY.T3.Stmt.if_part,
    edY.T3.Stmt.elif_part,
    edY.T3.Stmt.while_part,
    edY.T3.Stmt.any_stmt,
  ],
  except_part: [ // count 3
    edY.T3.Stmt.try_part,
    edY.T3.Stmt.except_part,
    edY.T3.Stmt.any_stmt,
  ],
  void_except_part: [ // count 3
    edY.T3.Stmt.try_part,
    edY.T3.Stmt.except_part,
    edY.T3.Stmt.any_stmt,
  ],
  finally_part: [ // count 6
    edY.T3.Stmt.else_part,
    edY.T3.Stmt.try_part,
    edY.T3.Stmt.except_part,
    edY.T3.Stmt.void_except_part,
    edY.T3.Stmt.try_else_part,
    edY.T3.Stmt.any_stmt,
  ],
  try_else_part: [ // count 3
    edY.T3.Stmt.except_part,
    edY.T3.Stmt.void_except_part,
    edY.T3.Stmt.any_stmt,
  ],
  docstring_def_stmt: [ // count 4
    edY.T3.Stmt.funcdef_part+"."+edY.Key.SUITE,
    edY.T3.Stmt.classdef_part+"."+edY.Key.SUITE,
    edY.T3.Stmt.docstring_def_stmt,
    edY.T3.Stmt.any_stmt,
  ],
}


edY.T3.Stmt.Next = {
  decorator: [ // count 3
    edY.T3.Stmt.decorator,
    edY.T3.Stmt.funcdef_part,
    edY.T3.Stmt.classdef_part,
  ],
  try_part: [ // count 4
    edY.T3.Stmt.except_part,
    edY.T3.Stmt.void_except_part,
    edY.T3.Stmt.finally_part,
    edY.T3.Stmt.any_stmt,
  ],
}


edY.T3.Stmt.Available = []

edY.T3.Expr = {
// core expressions
  longformattedliteral      /*   ::=                                                    (Atoms) */ : "edy:longformattedliteral",
  shortformattedliteral     /*   ::=                                                    (Atoms) */ : "edy:shortformattedliteral",
  non_void_expression_list  /*   ::=                                                    (Expression lists) */ : "edy:non_void_expression_list",
  parenth_form              /*   ::= "(" starred_item_list | yield_expression ")"       (Atoms) */ : "edy:parenth_form",
  comprehension             /*   ::= expression comp_for                                (Atoms) */ : "edy:comprehension",
  comp_for                  /*   ::= [ASYNC] "for" target_list "in" or_test [comp_iter] (Atoms) */ : "edy:comp_for",
  comp_if                   /*   ::= "if" expression_nocond [comp_iter]                 (Atoms) */ : "edy:comp_if",
  list_display              /*   ::= "[" starred_item_list_comprehensive "]"            (Atoms) */ : "edy:list_display",
  set_display               /*   ::= "{" non_void_starred_item_list_comprehensive "}"   (Atoms) */ : "edy:set_display",
  dict_display              /*   ::= "{" [key_datum_list | dict_comprehension] "}"      (Atoms) */ : "edy:dict_display",
  dict_comprehension        /*   ::= expression ":" expression comp_for                 (Atoms) */ : "edy:dict_comprehension",
  yield_expression          /*   ::= "yield" [expression_list | "from" expression]      (Atoms) */ : "edy:yield_expression",
  attributeref              /*   ::= primary "." identifier                             (Primaries) */ : "edy:attributeref",
  subscription              /*   ::= primary "[" expression_list "]"                    (Primaries) */ : "edy:subscription",
  slicing                   /*   ::= primary "[" slice_list "]"                         (Primaries) */ : "edy:slicing",
  proper_slice              /*   ::= [lower_bound] ":" [upper_bound] [ ":" [stride] ]   (Primaries) */ : "edy:proper_slice",
  call_expr                 /*   ::= primary "(" [argument_list [","] | comprehension] ")" (Primaries) */ : "edy:call_expr",
  argument_list             /*   ::= argument_any *                                     (Primaries) */ : "edy:argument_list",
  keyword_item              /*   ::= identifier "=" expression                          (Primaries) */ : "edy:keyword_item",
  power_s3d                 /*   ::= await_or_primary "**" u_expr                       (The power operator) */ : "edy:power_s3d",
  u_expr_s3d                /*   ::= "-" u_expr | "+" u_expr | "~" u_expr               (Unary arithmetic and bitwise operations) */ : "edy:u_expr_s3d",
  m_expr_s3d                /*   ::= m_expr "*" u_expr | m_expr "@" m_expr | m_expr "//" u_expr| m_expr "/" u_expr | m_expr "%" u_expr (Binary arithmetic operations) */ : "edy:m_expr_s3d",
  a_expr_s3d                /*   ::= a_expr "+" m_expr | a_expr "-" m_expr              (Binary arithmetic operations) */ : "edy:a_expr_s3d",
  shift_expr_s3d            /*   ::= shift_expr ( "<<" | ">>" ) a_expr                  (Shifting operations) */ : "edy:shift_expr_s3d",
  and_expr_s3d              /*   ::= and_expr "&" shift_expr                            (Binary bitwise operations) */ : "edy:and_expr_s3d",
  xor_expr_s3d              /*   ::= xor_expr "^" and_expr                              (Binary bitwise operations) */ : "edy:xor_expr_s3d",
  or_expr_s3d               /*   ::= or_expr "|" xor_expr                               (Binary bitwise operations) */ : "edy:or_expr_s3d",
  or_test_s3d               /*   ::= or_test "or" and_test                              (Boolean operations) */ : "edy:or_test_s3d",
  and_test_s3d              /*   ::= and_test "and" not_test                            (Boolean operations) */ : "edy:and_test_s3d",
  not_test_s3d              /*   ::= "not" not_test                                     (Boolean operations) */ : "edy:not_test_s3d",
  conditional_expression_s3d /*   ::= or_test "if" or_test "else" expression             (Conditional expressions) */ : "edy:conditional_expression_s3d",
  lambda_expr               /*   ::= "lambda" [parameter_list]: expression              (Lambdas) */ : "edy:lambda_expr",
  lambda_expr_nocond        /*   ::= "lambda" [parameter_list]: expression_nocond       (Lambdas) */ : "edy:lambda_expr_nocond",
  starred_expression        /*   ::= one of expression_star, expression_star_star, or_expr_star_star, star_expr (Expression lists) */ : "edy:starred_expression",
  builtin_object            /*   ::= 'None' | 'True' | 'False' | 'Ellipsis' | '...' |'NotImplemented' (Atoms) */ : "edy:builtin_object",
  any                       /*   ::= any expression                                     (Atoms) */ : "edy:any",
  starred_item_list         /*   ::= starred_item ? ( ',' starred_item ) * [',']        (Atoms) */ : "edy:starred_item_list",
  star_expr                 /*   ::= "*" or_expr                                        (Expression lists) */ : "edy:star_expr",
  optional_expression_list  /*   ::= ( expression ',' )* [ expression ]                 (Expression lists) */ : "edy:optional_expression_list",
  shortstringliteral        /*   ::= ''                                                 (Atoms) */ : "edy:shortstringliteral",
  shortbytesliteral         /*   ::= b''                                                (Atoms) */ : "edy:shortbytesliteral",
  longstringliteral         /*   ::= ''''''                                             (Atoms) */ : "edy:longstringliteral",
  longbytesliteral          /*   ::= b''''''                                            (Atoms) */ : "edy:longbytesliteral",
  integer                   /*   ::= 123                                                (Atoms) */ : "edy:integer",
  floatnumber               /*   ::= 123.                                               (Atoms) */ : "edy:floatnumber",
  imagnumber                /*   ::= 123j                                               (Atoms) */ : "edy:imagnumber",
  key_datum_s3d             /*   ::= expression ":" expression                          (Atoms) */ : "edy:key_datum_s3d",
  or_expr_star_star         /*   ::= "**" or_expr                                       (Atoms) */ : "edy:or_expr_star_star",
  call_expr                 /*   ::= primary "(" argument_list_comprehensive ")"        (Atoms) */ : "edy:call_expr",
  expression_star           /*   ::= "*" expression                                     (Atoms) */ : "edy:expression_star",
  expression_star_star      /*   ::= "**" expression                                    (Atoms) */ : "edy:expression_star_star",
  number_comparison         /*   ::= comparison comp_operator comparison                (Comparisons) */ : "edy:number_comparison",
  object_comparison         /*   ::= comparison comp_operator comparison                (Comparisons) */ : "edy:object_comparison",
  lambda                    /*   ::= "lambda" [parameter_list]: (expression | expression_no_cond) (Comparisons) */ : "edy:lambda",
  augop                     /*   ::= "+=" | "-=" | "*=" | "@=" | "/=" | "//=" | "%=" | "**=" | ">>=" | "<<=" | "&=" | "^=" | "|=" (Assignment statements) */ : "edy:augop",
  target_list_list          /*   ::= (target_list "=")* target_list                     (Assignment statements) */ : "edy:target_list_list",
  parenth_target_list       /*   ::= "(" void_target_list ")"                           (Assignment statements) */ : "edy:parenth_target_list",
  bracket_target_list       /*   ::= "[" void_target_list "]"                           (Assignment statements) */ : "edy:bracket_target_list",
  void_target_list          /*   ::= [target_list]                                      (Assignment statements) */ : "edy:void_target_list",
  target_star               /*   ::= "*" target                                         (Assignment statements) */ : "edy:target_star",
  module_as_s3d             /*   ::= module "as" identifier                             (The import statement) */ : "edy:module_as_s3d",
  term                      /*   ::= "not just an identifier"                           (The import statement) */ : "edy:term",
  parent_module             /*   ::= '.'+ [module]                                      (The import statement) */ : "edy:parent_module",
  identifier                /*   ::=                                                    (The import statement) */ : "edy:identifier",
  import_identifier_as_s3d  /*   ::= identifier "as" identifier                         (The import statement) */ : "edy:import_identifier_as_s3d",
  with_item_s3d             /*   ::= expression "as" target                             (The with statement) */ : "edy:with_item_s3d",
  parameter_list            /*   ::=                                                    (Function definitions) */ : "edy:parameter_list",
  parameter_list_starargs   /*   ::= "*" [parameter] ("," defparameter)* ["," ["**" parameter [","]]] | "**" parameter [","] (Function definitions) */ : "edy:parameter_list_starargs",
  parameter_s3d             /*   ::= identifier ":" expression                          (Function definitions) */ : "edy:parameter_s3d",
  defparameter_s3d          /*   ::= parameter "=" expression                           (Function definitions) */ : "edy:defparameter_s3d",
  inheritance               /*   ::= "(" [argument_list] ")"                            (Class definitions) */ : "edy:inheritance",
  parameter_star            /*   ::= "*" [parameter]                                    (Function definitions) */ : "edy:parameter_star",
  parameter_star_star       /*   ::= "**" parameter                                     (Function definitions) */ : "edy:parameter_star_star",
  builtin_print_expr        /*   ::= "print(" argument_list ")"                         (Coroutines) */ : "edy:builtin_print_expr",
  builtin_input_expr        /*   ::= "input(" [any_argument] ")"                        (Coroutines) */ : "edy:builtin_input_expr",
// lists
  key_datum_list            /*   ::= key_datum ("," key_datum)* [","]                   (Atoms) */ : "edy:key_datum_list",
  slice_list                /*   ::= slice_item ("," slice_item)* [","]                 (Primaries) */ : "edy:slice_list",
  non_void_starred_item_list /*   ::= starred_item ( ',' starred_item ) * [',']          (Expression lists) */ : "edy:non_void_starred_item_list",
  comp_iter_list            /*   ::= (comp_iter) *                                      (Atoms) */ : "edy:comp_iter_list",
  target_list               /*   ::= target ("," target)* [","]                         (Assignment statements) */ : "edy:target_list",
  non_void_module_as_list   /*   ::= module_as ( "," module_as )*                       (The import statement) */ : "edy:non_void_module_as_list",
  non_void_import_identifier_as_list /*   ::= import_identifier_as ( "," import_identifier_as )* (The import statement) */ : "edy:non_void_import_identifier_as_list",
  non_void_identifier_list  /*   ::= identifier ("," identifier)*                       (The nonlocal statement) */ : "edy:non_void_identifier_list",
  dotted_name               /*   ::= identifier ("." identifier)*                       (Function definitions) */ : "edy:dotted_name",
  with_item_list            /*   ::= with_item ("," with_item)*                         (The with statement) */ : "edy:with_item_list",
// wrappers, like starred_item ::=  expression | star_expr
  atom                      /*   ::= identifier | literal | enclosure | builtin_object  (Atoms) */ : "edy:atom",
  enclosure                 /*   ::= parenth_form | list_display | dict_display | set_display (Atoms) */ : "edy:enclosure",
  literal                   /*   ::= shortliteral | longliteral | numberliteral         (Atoms) */ : "edy:literal",
  comp_iter                 /*   ::= comp_for | comp_if                                 (Atoms) */ : "edy:comp_iter",
  key_datum                 /*   ::= key_datum_s3d | or_expr_star_star                  (Atoms) */ : "edy:key_datum",
  primary                   /*   ::= atom | attributeref | subscription | slicing | call (Primaries) */ : "edy:primary",
  slice_item                /*   ::= expression | proper_slice                          (Primaries) */ : "edy:slice_item",
  power                     /*   ::= await_or_primary | power_s3d                       (The power operator) */ : "edy:power",
  u_expr                    /*   ::= power | u_expr_s3d                                 (Unary arithmetic and bitwise operations) */ : "edy:u_expr",
  m_expr                    /*   ::= u_expr | m_expr_s3d                                (Binary arithmetic operations) */ : "edy:m_expr",
  a_expr                    /*   ::= m_expr | a_expr_s3d                                (Binary arithmetic operations) */ : "edy:a_expr",
  shift_expr                /*   ::= a_expr | shift_expr_s3d                            (Shifting operations) */ : "edy:shift_expr",
  and_expr                  /*   ::= shift_expr | and_expr_s3d                          (Binary bitwise operations) */ : "edy:and_expr",
  xor_expr                  /*   ::= and_expr | xor_expr_s3d                            (Binary bitwise operations) */ : "edy:xor_expr",
  or_expr                   /*   ::= xor_expr | or_expr_s3d                             (Binary bitwise operations) */ : "edy:or_expr",
  comparison                /*   ::= or_expr | number_comparison | object_comparison    (Comparisons) */ : "edy:comparison",
  or_test                   /*   ::= and_test | or_test_s3d                             (Boolean operations) */ : "edy:or_test",
  and_test                  /*   ::= not_test | and_test_s3d                            (Boolean operations) */ : "edy:and_test",
  not_test                  /*   ::= comparison | not_test_s3d                          (Boolean operations) */ : "edy:not_test",
  conditional_expression    /*   ::= or_test | conditional_expression_s3d               (Conditional expressions) */ : "edy:conditional_expression",
  expression                /*   ::= conditional_expression | lambda_expr               (Conditional expressions) */ : "edy:expression",
  expression_nocond         /*   ::= or_test | lambda_expr_nocond                       (Conditional expressions) */ : "edy:expression_nocond",
  starred_item              /*   ::= expression | star_expr                             (Expression lists) */ : "edy:starred_item",
  shortliteral              /*   ::= shortstringliteral | shortbytesliteral | shortformattedliteral (Atoms) */ : "edy:shortliteral",
  longliteral               /*   ::= longstringliteral | longbytesliteral | longformattedliteral (Atoms) */ : "edy:longliteral",
  bytesliteral              /*   ::= shortbytesliteral | longbytesliteral               (Atoms) */ : "edy:bytesliteral",
  stringliteral             /*   ::= shortbytesliteral | longbytesliteral               (Atoms) */ : "edy:stringliteral",
  numberliteral             /*   ::= integer | floatnumber | imagnumber                 (Atoms) */ : "edy:numberliteral",
  starred_item_list_comprehensive /*   ::= starred_item | comprehension                       (Atoms) */ : "edy:starred_item_list_comprehensive",
  non_void_starred_item_list_comprehensive /*   ::= starred_item | comprehension                       (Atoms) */ : "edy:non_void_starred_item_list_comprehensive",
  key_datum_list_comprehensive /*   ::= key_datum | dict_comprehension                     (Atoms) */ : "edy:key_datum_list_comprehensive",
  argument_any              /*   ::= expression | expression_star | expression_star_star | keyword_item (Atoms) */ : "edy:argument_any",
  argument_list_comprehensive /*   ::= argument_list | comprehension                      (Atoms) */ : "edy:argument_list_comprehensive",
  algebra_choice            /*   ::= m_expr_s3d | a_expr_s3d                            (Comparisons) */ : "edy:algebra_choice",
  bitwise_choice            /*   ::= shift_expr_s3d | and_expr_s3d | xor_expr_s3d | or_expr_s3d (Comparisons) */ : "edy:bitwise_choice",
  boolean_choice            /*   ::= and_test_s3d | or_test_s3d                         (Comparisons) */ : "edy:boolean_choice",
  unary_choice              /*   ::= u_expr_s3d | not_test_s3d                          (Comparisons) */ : "edy:unary_choice",
  target                    /*   ::= target_unstar | target_star                        (Assignment statements) */ : "edy:target",
  augtarget                 /*   ::= identifier | attributeref | subscription | slicing (Assignment statements) */ : "edy:augtarget",
  module                    /*   ::= dotted_name | identifier                           (The import statement) */ : "edy:module",
  relative_module           /*   ::= module | parent_module                             (The import statement) */ : "edy:relative_module",
  assigned_list             /*   ::= starred_item | yield_expression                    (Assignment statements) */ : "edy:assigned_list",
  augassigned_list          /*   ::= expression | yield_expression                      (Assignment statements) */ : "edy:augassigned_list",
  target_unstar             /*   ::= identifier | parenth_target_list | bracket_target_list | attributeref | subscription | slicing (Assignment statements) */ : "edy:target_unstar",
  module_as                 /*   ::= module | module_as_s3d                             (The import statement) */ : "edy:module_as",
  import_identifier_as      /*   ::= identifier | import_identifier_as_s3d              (The import statement) */ : "edy:import_identifier_as",
  with_item                 /*   ::= expression | with_item_s3d                         (The with statement) */ : "edy:with_item",
  parameter                 /*   ::= identifier | parameter_s3d                         (Function definitions) */ : "edy:parameter",
  defparameter              /*   ::= parameter | defparameter_s3d                       (Function definitions) */ : "edy:defparameter",
  parameter_any             /*   ::= parameter | defparameter | parameter_star | parameter_star_star (Function definitions) */ : "edy:parameter_any",
// wrappers, like module_name ::= identifier because module_name is used in some Check array
}

// aliases
edY.T3.Expr.name = edY.T3.Expr.identifier
edY.T3.Expr.lower_bound = edY.T3.Expr.expression
edY.T3.Expr.upper_bound = edY.T3.Expr.expression
edY.T3.Expr.stride = edY.T3.Expr.expression
edY.T3.Expr.expression_list = edY.T3.Expr.non_void_expression_list
edY.T3.Expr.await_or_primary = edY.T3.Expr.primary
edY.T3.Expr.feature = edY.T3.Expr.identifier
edY.T3.Expr.funcname = edY.T3.Expr.identifier
edY.T3.Expr.classname = edY.T3.Expr.identifier

// special aliases, some types that change naming across the documentation
edY.T3.Expr.or_expr_star = edY.T3.Expr.star_expr

edY.T3.Expr.Check = {
  atom: [ // count 15
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  enclosure: [ // count 4
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.any,
  ],
  literal: [ // count 9
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.any,
  ],
  key_datum_list: [ // count 2
    edY.T3.Expr.key_datum_s3d,
    edY.T3.Expr.or_expr_star_star,
    edY.T3.Expr.any,
  ],
  primary: [ // count 19
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.call_expr,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  slice_list: [ // count 35
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.proper_slice,
    edY.T3.Expr.call_expr,
    edY.T3.Expr.power_s3d,
    edY.T3.Expr.u_expr_s3d,
    edY.T3.Expr.m_expr_s3d,
    edY.T3.Expr.a_expr_s3d,
    edY.T3.Expr.shift_expr_s3d,
    edY.T3.Expr.and_expr_s3d,
    edY.T3.Expr.xor_expr_s3d,
    edY.T3.Expr.or_expr_s3d,
    edY.T3.Expr.or_test_s3d,
    edY.T3.Expr.and_test_s3d,
    edY.T3.Expr.not_test_s3d,
    edY.T3.Expr.conditional_expression_s3d,
    edY.T3.Expr.lambda_expr,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.number_comparison,
    edY.T3.Expr.object_comparison,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  power: [ // count 20
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.call_expr,
    edY.T3.Expr.power_s3d,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  u_expr: [ // count 21
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.call_expr,
    edY.T3.Expr.power_s3d,
    edY.T3.Expr.u_expr_s3d,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  m_expr: [ // count 22
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.call_expr,
    edY.T3.Expr.power_s3d,
    edY.T3.Expr.u_expr_s3d,
    edY.T3.Expr.m_expr_s3d,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  a_expr: [ // count 23
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.call_expr,
    edY.T3.Expr.power_s3d,
    edY.T3.Expr.u_expr_s3d,
    edY.T3.Expr.m_expr_s3d,
    edY.T3.Expr.a_expr_s3d,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  shift_expr: [ // count 24
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.call_expr,
    edY.T3.Expr.power_s3d,
    edY.T3.Expr.u_expr_s3d,
    edY.T3.Expr.m_expr_s3d,
    edY.T3.Expr.a_expr_s3d,
    edY.T3.Expr.shift_expr_s3d,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  and_expr: [ // count 25
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.call_expr,
    edY.T3.Expr.power_s3d,
    edY.T3.Expr.u_expr_s3d,
    edY.T3.Expr.m_expr_s3d,
    edY.T3.Expr.a_expr_s3d,
    edY.T3.Expr.shift_expr_s3d,
    edY.T3.Expr.and_expr_s3d,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  xor_expr: [ // count 26
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.call_expr,
    edY.T3.Expr.power_s3d,
    edY.T3.Expr.u_expr_s3d,
    edY.T3.Expr.m_expr_s3d,
    edY.T3.Expr.a_expr_s3d,
    edY.T3.Expr.shift_expr_s3d,
    edY.T3.Expr.and_expr_s3d,
    edY.T3.Expr.xor_expr_s3d,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  or_expr: [ // count 27
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.call_expr,
    edY.T3.Expr.power_s3d,
    edY.T3.Expr.u_expr_s3d,
    edY.T3.Expr.m_expr_s3d,
    edY.T3.Expr.a_expr_s3d,
    edY.T3.Expr.shift_expr_s3d,
    edY.T3.Expr.and_expr_s3d,
    edY.T3.Expr.xor_expr_s3d,
    edY.T3.Expr.or_expr_s3d,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  comparison: [ // count 29
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.call_expr,
    edY.T3.Expr.power_s3d,
    edY.T3.Expr.u_expr_s3d,
    edY.T3.Expr.m_expr_s3d,
    edY.T3.Expr.a_expr_s3d,
    edY.T3.Expr.shift_expr_s3d,
    edY.T3.Expr.and_expr_s3d,
    edY.T3.Expr.xor_expr_s3d,
    edY.T3.Expr.or_expr_s3d,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.number_comparison,
    edY.T3.Expr.object_comparison,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  or_test: [ // count 32
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.call_expr,
    edY.T3.Expr.power_s3d,
    edY.T3.Expr.u_expr_s3d,
    edY.T3.Expr.m_expr_s3d,
    edY.T3.Expr.a_expr_s3d,
    edY.T3.Expr.shift_expr_s3d,
    edY.T3.Expr.and_expr_s3d,
    edY.T3.Expr.xor_expr_s3d,
    edY.T3.Expr.or_expr_s3d,
    edY.T3.Expr.or_test_s3d,
    edY.T3.Expr.and_test_s3d,
    edY.T3.Expr.not_test_s3d,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.number_comparison,
    edY.T3.Expr.object_comparison,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  and_test: [ // count 31
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.call_expr,
    edY.T3.Expr.power_s3d,
    edY.T3.Expr.u_expr_s3d,
    edY.T3.Expr.m_expr_s3d,
    edY.T3.Expr.a_expr_s3d,
    edY.T3.Expr.shift_expr_s3d,
    edY.T3.Expr.and_expr_s3d,
    edY.T3.Expr.xor_expr_s3d,
    edY.T3.Expr.or_expr_s3d,
    edY.T3.Expr.and_test_s3d,
    edY.T3.Expr.not_test_s3d,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.number_comparison,
    edY.T3.Expr.object_comparison,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  not_test: [ // count 30
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.call_expr,
    edY.T3.Expr.power_s3d,
    edY.T3.Expr.u_expr_s3d,
    edY.T3.Expr.m_expr_s3d,
    edY.T3.Expr.a_expr_s3d,
    edY.T3.Expr.shift_expr_s3d,
    edY.T3.Expr.and_expr_s3d,
    edY.T3.Expr.xor_expr_s3d,
    edY.T3.Expr.or_expr_s3d,
    edY.T3.Expr.not_test_s3d,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.number_comparison,
    edY.T3.Expr.object_comparison,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  conditional_expression: [ // count 33
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.call_expr,
    edY.T3.Expr.power_s3d,
    edY.T3.Expr.u_expr_s3d,
    edY.T3.Expr.m_expr_s3d,
    edY.T3.Expr.a_expr_s3d,
    edY.T3.Expr.shift_expr_s3d,
    edY.T3.Expr.and_expr_s3d,
    edY.T3.Expr.xor_expr_s3d,
    edY.T3.Expr.or_expr_s3d,
    edY.T3.Expr.or_test_s3d,
    edY.T3.Expr.and_test_s3d,
    edY.T3.Expr.not_test_s3d,
    edY.T3.Expr.conditional_expression_s3d,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.number_comparison,
    edY.T3.Expr.object_comparison,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  expression: [ // count 34
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.call_expr,
    edY.T3.Expr.power_s3d,
    edY.T3.Expr.u_expr_s3d,
    edY.T3.Expr.m_expr_s3d,
    edY.T3.Expr.a_expr_s3d,
    edY.T3.Expr.shift_expr_s3d,
    edY.T3.Expr.and_expr_s3d,
    edY.T3.Expr.xor_expr_s3d,
    edY.T3.Expr.or_expr_s3d,
    edY.T3.Expr.or_test_s3d,
    edY.T3.Expr.and_test_s3d,
    edY.T3.Expr.not_test_s3d,
    edY.T3.Expr.conditional_expression_s3d,
    edY.T3.Expr.lambda_expr,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.number_comparison,
    edY.T3.Expr.object_comparison,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  expression_nocond: [ // count 33
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.call_expr,
    edY.T3.Expr.power_s3d,
    edY.T3.Expr.u_expr_s3d,
    edY.T3.Expr.m_expr_s3d,
    edY.T3.Expr.a_expr_s3d,
    edY.T3.Expr.shift_expr_s3d,
    edY.T3.Expr.and_expr_s3d,
    edY.T3.Expr.xor_expr_s3d,
    edY.T3.Expr.or_expr_s3d,
    edY.T3.Expr.or_test_s3d,
    edY.T3.Expr.and_test_s3d,
    edY.T3.Expr.not_test_s3d,
    edY.T3.Expr.lambda_expr_nocond,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.number_comparison,
    edY.T3.Expr.object_comparison,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  non_void_starred_item_list: [ // count 1
    edY.T3.Expr.non_void_starred_item_list,
    edY.T3.Expr.any,
  ],
  non_void_starred_item_list: [ // count 35
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.call_expr,
    edY.T3.Expr.power_s3d,
    edY.T3.Expr.u_expr_s3d,
    edY.T3.Expr.m_expr_s3d,
    edY.T3.Expr.a_expr_s3d,
    edY.T3.Expr.shift_expr_s3d,
    edY.T3.Expr.and_expr_s3d,
    edY.T3.Expr.xor_expr_s3d,
    edY.T3.Expr.or_expr_s3d,
    edY.T3.Expr.or_test_s3d,
    edY.T3.Expr.and_test_s3d,
    edY.T3.Expr.not_test_s3d,
    edY.T3.Expr.conditional_expression_s3d,
    edY.T3.Expr.lambda_expr,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.star_expr,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.number_comparison,
    edY.T3.Expr.object_comparison,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  shortliteral: [ // count 3
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.any,
  ],
  longliteral: [ // count 3
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.any,
  ],
  bytesliteral: [ // count 2
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.any,
  ],
  stringliteral: [ // count 2
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.any,
  ],
  numberliteral: [ // count 3
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.any,
  ],
  comp_iter_list: [ // count 2
    edY.T3.Expr.comp_for,
    edY.T3.Expr.comp_if,
    edY.T3.Expr.any,
  ],
  starred_item_list_comprehensive: [ // count 36
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.comprehension,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.call_expr,
    edY.T3.Expr.power_s3d,
    edY.T3.Expr.u_expr_s3d,
    edY.T3.Expr.m_expr_s3d,
    edY.T3.Expr.a_expr_s3d,
    edY.T3.Expr.shift_expr_s3d,
    edY.T3.Expr.and_expr_s3d,
    edY.T3.Expr.xor_expr_s3d,
    edY.T3.Expr.or_expr_s3d,
    edY.T3.Expr.or_test_s3d,
    edY.T3.Expr.and_test_s3d,
    edY.T3.Expr.not_test_s3d,
    edY.T3.Expr.conditional_expression_s3d,
    edY.T3.Expr.lambda_expr,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.star_expr,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.number_comparison,
    edY.T3.Expr.object_comparison,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  non_void_starred_item_list_comprehensive: [ // count 36
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.comprehension,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.call_expr,
    edY.T3.Expr.power_s3d,
    edY.T3.Expr.u_expr_s3d,
    edY.T3.Expr.m_expr_s3d,
    edY.T3.Expr.a_expr_s3d,
    edY.T3.Expr.shift_expr_s3d,
    edY.T3.Expr.and_expr_s3d,
    edY.T3.Expr.xor_expr_s3d,
    edY.T3.Expr.or_expr_s3d,
    edY.T3.Expr.or_test_s3d,
    edY.T3.Expr.and_test_s3d,
    edY.T3.Expr.not_test_s3d,
    edY.T3.Expr.conditional_expression_s3d,
    edY.T3.Expr.lambda_expr,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.star_expr,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.number_comparison,
    edY.T3.Expr.object_comparison,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  key_datum_list_comprehensive: [ // count 3
    edY.T3.Expr.dict_comprehension,
    edY.T3.Expr.key_datum_s3d,
    edY.T3.Expr.or_expr_star_star,
    edY.T3.Expr.any,
  ],
  argument_any: [ // count 37
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.call_expr,
    edY.T3.Expr.keyword_item,
    edY.T3.Expr.power_s3d,
    edY.T3.Expr.u_expr_s3d,
    edY.T3.Expr.m_expr_s3d,
    edY.T3.Expr.a_expr_s3d,
    edY.T3.Expr.shift_expr_s3d,
    edY.T3.Expr.and_expr_s3d,
    edY.T3.Expr.xor_expr_s3d,
    edY.T3.Expr.or_expr_s3d,
    edY.T3.Expr.or_test_s3d,
    edY.T3.Expr.and_test_s3d,
    edY.T3.Expr.not_test_s3d,
    edY.T3.Expr.conditional_expression_s3d,
    edY.T3.Expr.lambda_expr,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.expression_star,
    edY.T3.Expr.expression_star_star,
    edY.T3.Expr.number_comparison,
    edY.T3.Expr.object_comparison,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  argument_list_comprehensive: [ // count 2
    edY.T3.Expr.comprehension,
    edY.T3.Expr.argument_list,
    edY.T3.Expr.any,
  ],
  algebra_choice: [ // count 2
    edY.T3.Expr.m_expr_s3d,
    edY.T3.Expr.a_expr_s3d,
    edY.T3.Expr.any,
  ],
  bitwise_choice: [ // count 4
    edY.T3.Expr.shift_expr_s3d,
    edY.T3.Expr.and_expr_s3d,
    edY.T3.Expr.xor_expr_s3d,
    edY.T3.Expr.or_expr_s3d,
    edY.T3.Expr.any,
  ],
  boolean_choice: [ // count 2
    edY.T3.Expr.or_test_s3d,
    edY.T3.Expr.and_test_s3d,
    edY.T3.Expr.any,
  ],
  unary_choice: [ // count 2
    edY.T3.Expr.u_expr_s3d,
    edY.T3.Expr.not_test_s3d,
    edY.T3.Expr.any,
  ],
  target_list: [ // count 7
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.parenth_target_list,
    edY.T3.Expr.bracket_target_list,
    edY.T3.Expr.target_star,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  augtarget: [ // count 4
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  module: [ // count 2
    edY.T3.Expr.identifier,
    edY.T3.Expr.dotted_name,
    edY.T3.Expr.any,
  ],
  relative_module: [ // count 3
    edY.T3.Expr.parent_module,
    edY.T3.Expr.identifier,
    edY.T3.Expr.dotted_name,
    edY.T3.Expr.any,
  ],
  assigned_list: [ // count 36
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.yield_expression,
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.call_expr,
    edY.T3.Expr.power_s3d,
    edY.T3.Expr.u_expr_s3d,
    edY.T3.Expr.m_expr_s3d,
    edY.T3.Expr.a_expr_s3d,
    edY.T3.Expr.shift_expr_s3d,
    edY.T3.Expr.and_expr_s3d,
    edY.T3.Expr.xor_expr_s3d,
    edY.T3.Expr.or_expr_s3d,
    edY.T3.Expr.or_test_s3d,
    edY.T3.Expr.and_test_s3d,
    edY.T3.Expr.not_test_s3d,
    edY.T3.Expr.conditional_expression_s3d,
    edY.T3.Expr.lambda_expr,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.star_expr,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.number_comparison,
    edY.T3.Expr.object_comparison,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  augassigned_list: [ // count 35
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.yield_expression,
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.call_expr,
    edY.T3.Expr.power_s3d,
    edY.T3.Expr.u_expr_s3d,
    edY.T3.Expr.m_expr_s3d,
    edY.T3.Expr.a_expr_s3d,
    edY.T3.Expr.shift_expr_s3d,
    edY.T3.Expr.and_expr_s3d,
    edY.T3.Expr.xor_expr_s3d,
    edY.T3.Expr.or_expr_s3d,
    edY.T3.Expr.or_test_s3d,
    edY.T3.Expr.and_test_s3d,
    edY.T3.Expr.not_test_s3d,
    edY.T3.Expr.conditional_expression_s3d,
    edY.T3.Expr.lambda_expr,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.number_comparison,
    edY.T3.Expr.object_comparison,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  target_unstar: [ // count 6
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.parenth_target_list,
    edY.T3.Expr.bracket_target_list,
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  non_void_module_as_list: [ // count 3
    edY.T3.Expr.module_as_s3d,
    edY.T3.Expr.identifier,
    edY.T3.Expr.dotted_name,
    edY.T3.Expr.any,
  ],
  non_void_import_identifier_as_list: [ // count 2
    edY.T3.Expr.identifier,
    edY.T3.Expr.import_identifier_as_s3d,
    edY.T3.Expr.any,
  ],
  non_void_identifier_list: [ // count 1
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  dotted_name: [ // count 1
    edY.T3.Expr.identifier,
    edY.T3.Expr.any,
  ],
  parameter: [ // count 2
    edY.T3.Expr.identifier,
    edY.T3.Expr.parameter_s3d,
    edY.T3.Expr.any,
  ],
  defparameter: [ // count 3
    edY.T3.Expr.identifier,
    edY.T3.Expr.parameter_s3d,
    edY.T3.Expr.defparameter_s3d,
    edY.T3.Expr.any,
  ],
  with_item_list: [ // count 35
    edY.T3.Expr.longformattedliteral,
    edY.T3.Expr.shortformattedliteral,
    edY.T3.Expr.parenth_form,
    edY.T3.Expr.list_display,
    edY.T3.Expr.set_display,
    edY.T3.Expr.dict_display,
    edY.T3.Expr.attributeref,
    edY.T3.Expr.subscription,
    edY.T3.Expr.slicing,
    edY.T3.Expr.call_expr,
    edY.T3.Expr.power_s3d,
    edY.T3.Expr.u_expr_s3d,
    edY.T3.Expr.m_expr_s3d,
    edY.T3.Expr.a_expr_s3d,
    edY.T3.Expr.shift_expr_s3d,
    edY.T3.Expr.and_expr_s3d,
    edY.T3.Expr.xor_expr_s3d,
    edY.T3.Expr.or_expr_s3d,
    edY.T3.Expr.or_test_s3d,
    edY.T3.Expr.and_test_s3d,
    edY.T3.Expr.not_test_s3d,
    edY.T3.Expr.conditional_expression_s3d,
    edY.T3.Expr.lambda_expr,
    edY.T3.Expr.builtin_object,
    edY.T3.Expr.shortstringliteral,
    edY.T3.Expr.shortbytesliteral,
    edY.T3.Expr.longstringliteral,
    edY.T3.Expr.longbytesliteral,
    edY.T3.Expr.integer,
    edY.T3.Expr.floatnumber,
    edY.T3.Expr.imagnumber,
    edY.T3.Expr.number_comparison,
    edY.T3.Expr.object_comparison,
    edY.T3.Expr.identifier,
    edY.T3.Expr.with_item_s3d,
    edY.T3.Expr.any,
  ],
  parameter_any: [ // count 5
    edY.T3.Expr.identifier,
    edY.T3.Expr.parameter_s3d,
    edY.T3.Expr.defparameter_s3d,
    edY.T3.Expr.parameter_star,
    edY.T3.Expr.parameter_star_star,
    edY.T3.Expr.any,
  ],
}

// same checks
edY.T3.Expr.Check.comp_iter = edY.T3.Expr.Check.comp_iter_list
edY.T3.Expr.Check.key_datum = edY.T3.Expr.Check.key_datum_list
edY.T3.Expr.Check.slice_item = edY.T3.Expr.Check.slice_list
edY.T3.Expr.Check.starred_item = edY.T3.Expr.Check.non_void_starred_item_list
edY.T3.Expr.Check.target = edY.T3.Expr.Check.target_list
edY.T3.Expr.Check.module_as = edY.T3.Expr.Check.non_void_module_as_list
edY.T3.Expr.Check.import_identifier_as = edY.T3.Expr.Check.non_void_import_identifier_as_list
edY.T3.Expr.Check.with_item = edY.T3.Expr.Check.with_item_list

// alias checks
edY.T3.Expr.Check.name = edY.T3.Expr.Check.identifier
edY.T3.Expr.Check.lower_bound = edY.T3.Expr.Check.expression
edY.T3.Expr.Check.upper_bound = edY.T3.Expr.Check.expression
edY.T3.Expr.Check.stride = edY.T3.Expr.Check.expression
edY.T3.Expr.Check.expression_list = edY.T3.Expr.Check.non_void_expression_list
edY.T3.Expr.Check.await_or_primary = edY.T3.Expr.Check.primary
edY.T3.Expr.Check.feature = edY.T3.Expr.Check.identifier
edY.T3.Expr.Check.funcname = edY.T3.Expr.Check.identifier
edY.T3.Expr.Check.classname = edY.T3.Expr.Check.identifier

edY.T3.Expr.Available = []

edY.T3.Xml = {
    toDom: {},
}
edY.T3.Xml.toDom.Stmt = { // count 26
    any_stmt: 'stmt',
    funcdef_part: 'function',
    except_part: 'except',
    del_stmt: 'del',
    classdef_part: 'class',
    elif_part: 'elif',
    raise_stmt: 'raise',
    assignment_stmt: 'assignment',
    pass_stmt: 'pass',
    import_stmt: 'import',
    else_part: 'else',
    try_part: 'try',
    call_stmt: 'call',
    if_part: 'if',
    builtin_print_stmt: 'print',
    try_else_part: 'else',
    for_part: 'for',
    while_part: 'while',
    with_part: 'with',
    finally_part: 'finally',
    last_else_part: 'else',
    augmented_assignment_stmt: 'augmented_assignment',
    break_stmt: 'break',
    return_stmt: 'return',
    yield_stmt: 'yield',
    continue_stmt: 'continue',
}

edY.T3.Xml.toDom.Expr = { // count 14
    builtin_input_expr: 'input',
    shortstringliteral: 'literal',
    longbytesliteral: 'literal',
    floatnumber: 'literal',
    shortbytesliteral: 'literal',
    imagnumber: 'literal',
    starred_expression: 'starred',
    call_expr: 'call',
    object_comparison: 'comparison',
    number_comparison: 'comparison',
    builtin_print_expr: 'print',
    integer: 'literal',
    longstringliteral: 'literal',
    longliteral: 'literal',
}

edY.T3.Xml.fromDom = { // count 28
    stmt: edY.T3.Stmt.any_stmt,
    elif: edY.T3.Stmt.elif_part,
    continue: edY.T3.Stmt.continue_stmt,
    literal: [edY.T3.Expr.shortstringliteral, edY.T3.Expr.longbytesliteral, edY.T3.Expr.floatnumber, edY.T3.Expr.shortbytesliteral, edY.T3.Expr.imagnumber, edY.T3.Expr.integer, edY.T3.Expr.longstringliteral, edY.T3.Expr.longliteral],
    call: [edY.T3.Stmt.call_stmt, edY.T3.Expr.call_expr],
    return: edY.T3.Stmt.return_stmt,
    break: edY.T3.Stmt.break_stmt,
    raise: edY.T3.Stmt.raise_stmt,
    try: edY.T3.Stmt.try_part,
    for: edY.T3.Stmt.for_part,
    with: edY.T3.Stmt.with_part,
    assignment: edY.T3.Stmt.assignment_stmt,
    class: edY.T3.Stmt.classdef_part,
    pass: edY.T3.Stmt.pass_stmt,
    comparison: [edY.T3.Expr.object_comparison, edY.T3.Expr.number_comparison],
    import: edY.T3.Stmt.import_stmt,
    yield: edY.T3.Stmt.yield_stmt,
    while: edY.T3.Stmt.while_part,
    function: edY.T3.Stmt.funcdef_part,
    del: edY.T3.Stmt.del_stmt,
    augmented_assignment: edY.T3.Stmt.augmented_assignment_stmt,
    print: [edY.T3.Stmt.builtin_print_stmt, edY.T3.Expr.builtin_print_expr],
    if: edY.T3.Stmt.if_part,
    starred: edY.T3.Expr.starred_expression,
    input: edY.T3.Expr.builtin_input_expr,
    else: [edY.T3.Stmt.else_part, edY.T3.Stmt.try_else_part, edY.T3.Stmt.last_else_part],
    except: edY.T3.Stmt.except_part,
    finally: edY.T3.Stmt.finally_part,
}
